{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.21.1",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::APIGatewayv2",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.57.0 (build f614666)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "apigateway"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-apigatewayv2-alpha",
  "readme": {
    "markdown": "# AWS::APIGatewayv2 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\nFeatures                                   | Stability\n-------------------------------------------|--------------------------------------------------------\nHigher level constructs for HTTP APIs      | ![Experimental](https://img.shields.io/badge/experimental-important.svg?style=for-the-badge)\nHigher level constructs for Websocket APIs | ![Experimental](https://img.shields.io/badge/experimental-important.svg?style=for-the-badge)\n\n> **Experimental:** Higher level constructs in this module that are marked as experimental are\n> under active development. They are subject to non-backward compatible changes or removal in any\n> future version. These are not subject to the [Semantic Versioning](https://semver.org/) model and\n> breaking changes will be announced in the release notes. This means that while you may use them,\n> you may need to update your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Table of Contents\n\n- [Introduction](#introduction)\n- [HTTP API](#http-api)\n  - [Defining HTTP APIs](#defining-http-apis)\n  - [Cross Origin Resource Sharing (CORS)](#cross-origin-resource-sharing-cors)\n  - [Publishing HTTP APIs](#publishing-http-apis)\n  - [Custom Domain](#custom-domain)\n  - [Mutual TLS](#mutual-tls-mtls)\n  - [Managing access to HTTP APIs](#managing-access-to-http-apis)\n  - [Metrics](#metrics)\n  - [VPC Link](#vpc-link)\n  - [Private Integration](#private-integration)\n- [WebSocket API](#websocket-api)\n  - [Manage Connections Permission](#manage-connections-permission)\n  - [Managing access to WebSocket APIs](#managing-access-to-websocket-apis)\n\n## Introduction\n\nAmazon API Gateway is an AWS service for creating, publishing, maintaining, monitoring, and securing REST, HTTP, and WebSocket\nAPIs at any scale. API developers can create APIs that access AWS or other web services, as well as data stored in the AWS Cloud.\nAs an API Gateway API developer, you can create APIs for use in your own client applications. Read the\n[Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html).\n\nThis module supports features under [API Gateway v2](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_ApiGatewayV2.html)\nthat lets users set up Websocket and HTTP APIs.\nREST APIs can be created using the `@aws-cdk/aws-apigateway` module.\n\n## HTTP API\n\nHTTP APIs enable creation of RESTful APIs that integrate with AWS Lambda functions, known as Lambda proxy integration,\nor to any routable HTTP endpoint, known as HTTP proxy integration.\n\n### Defining HTTP APIs\n\nHTTP APIs have two fundamental concepts - Routes and Integrations.\n\nRoutes direct incoming API requests to backend resources. Routes consist of two parts: an HTTP method and a resource\npath, such as, `GET /books`. Learn more at [Working with\nroutes](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-routes.html). Use the `ANY` method\nto match any methods for a route that are not explicitly defined.\n\nIntegrations define how the HTTP API responds when a client reaches a specific Route. HTTP APIs support Lambda proxy\nintegration, HTTP proxy integration and, AWS service integrations, also known as private integrations. Learn more at\n[Configuring integrations](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations.html).\n\nIntegrations are available at the `aws-apigatewayv2-integrations` module and more information is available in that module.\nAs an early example, the following code snippet configures a route `GET /books` with an HTTP proxy integration all\nconfigures all other HTTP method calls to `/books` to a lambda proxy.\n\n```ts\nimport { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});\n```\n\nThe URL to the endpoint can be retrieved via the `apiEndpoint` attribute. By default this URL is enabled for clients. Use `disableExecuteApiEndpoint` to disable it.\n\n```ts\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi', {\n  disableExecuteApiEndpoint: true,\n});\n```\n\nThe `defaultIntegration` option while defining HTTP APIs lets you create a default catch-all integration that is\nmatched when a client reaches a route that is not explicitly defined.\n\n```ts\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  defaultIntegration: new HttpUrlIntegration('DefaultIntegration', 'https://example.com'),\n});\n```\n\n### Cross Origin Resource Sharing (CORS)\n\n[Cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) is a browser security\nfeature that restricts HTTP requests that are initiated from scripts running in the browser. Enabling CORS will allow\nrequests to your API from a web application hosted in a domain different from your API domain.\n\nWhen configured CORS for an HTTP API, API Gateway automatically sends a response to preflight `OPTIONS` requests, even\nif there isn't an `OPTIONS` route configured. Note that, when this option is used, API Gateway will ignore CORS headers\nreturned from your backend integration. Learn more about [Configuring CORS for an HTTP\nAPI](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).\n\nThe `corsPreflight` option lets you specify a CORS configuration for an API.\n\n```ts\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});\n```\n\n### Publishing HTTP APIs\n\nA Stage is a logical reference to a lifecycle state of your API (for example, `dev`, `prod`, `beta`, or `v2`). API\nstages are identified by their stage name. Each stage is a named reference to a deployment of the API made available for\nclient applications to call.\n\nUse `HttpStage` to create a Stage resource for HTTP APIs. The following code sets up a Stage, whose URL is available at\n`https://{api_id}.execute-api.{region}.amazonaws.com/beta`.\n\n```ts\ndeclare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});\n```\n\nIf you omit the `stageName` will create a `$default` stage. A `$default` stage is one that is served from the base of\nthe API's URL - `https://{api_id}.execute-api.{region}.amazonaws.com/`.\n\nNote that, `HttpApi` will always creates a `$default` stage, unless the `createDefaultStage` property is unset.\n\n### Custom Domain\n\nCustom domain names are simpler and more intuitive URLs that you can provide to your API users. Custom domain name are associated to API stages.\n\nThe code snippet below creates a custom domain and configures a default domain mapping for your API that maps the\ncustom domain to the `$default` stage of the API.\n\n```ts\nimport * as acm from 'aws-cdk-lib/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});\n```\n\nTo migrate a domain endpoint from one type to another, you can add a new endpoint configuration via `addEndpoint()`\nand then configure DNS records to route traffic to the new endpoint. After that, you can remove the previous endpoint configuration.\nLearn more at [Migrating a custom domain name](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-migrate.html)\n\nTo associate a specific `Stage` to a custom domain mapping -\n\n```ts\ndeclare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});\n```\n\nThe same domain name can be associated with stages across different `HttpApi` as so -\n\n```ts\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});\n```\n\nThe `mappingKey` determines the base path of the URL with the custom domain. Each custom domain is only allowed\nto have one API mapping with undefined `mappingKey`. If more than one API mappings are specified, `mappingKey` will be required for all of them. In the sample above, the custom domain is associated\nwith 3 API mapping resources across different APIs and Stages.\n\n|        API     |     Stage   |   URL  |\n| :------------: | :---------: | :----: |\n| api | $default  |   `https://${domainName}/foo`  |\n| api | beta  |   `https://${domainName}/bar`  |\n| apiDemo | $default  |   `https://${domainName}/demo`  |\n\nYou can retrieve the full domain URL with mapping key using the `domainUrl` property as so -\n\n```ts\ndeclare const apiDemo: apigwv2.HttpApi;\nconst demoDomainUrl = apiDemo.defaultStage?.domainUrl; // returns \"https://example.com/demo\"\n```\n\n### Mutual TLS (mTLS)\n\nMutual TLS can be configured to limit access to your API based by using client certificates instead of (or as an extension of) using authorization headers.\n\n```ts\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as acm from 'aws-cdk-lib/aws-certificatemanager';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\ndeclare const bucket: s3.Bucket;\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});\n```\n\nInstructions for configuring your trust store can be found [here](https://aws.amazon.com/blogs/compute/introducing-mutual-tls-authentication-for-amazon-api-gateway/)\n\n### Managing access to HTTP APIs\n\nAPI Gateway supports multiple mechanisms for [controlling and managing access to your HTTP\nAPI](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-access-control.html) through authorizers.\n\nThese authorizers can be found in the [APIGatewayV2-Authorizers](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-apigatewayv2-authorizers-readme.html) constructs library.\n\n### Metrics\n\nThe API Gateway v2 service sends metrics around the performance of HTTP APIs to Amazon CloudWatch.\nThese metrics can be referred to using the metric APIs available on the `HttpApi` construct.\nThe APIs with the `metric` prefix can be used to get reference to specific metrics for this API. For example,\nthe method below refers to the client side errors metric for this API.\n\n```ts\nconst api = new apigwv2.HttpApi(this, 'my-api');\nconst clientErrorMetric = api.metricClientError();\n```\n\nPlease note that this will return a metric for all the stages defined in the api. It is also possible to refer to metrics for a specific Stage using\nthe `metric` methods from the `Stage` construct.\n\n```ts\nconst api = new apigwv2.HttpApi(this, 'my-api');\nconst stage = new apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n});\nconst clientErrorMetric = stage.metricClientError();\n```\n\n### VPC Link\n\nPrivate integrations let HTTP APIs connect with AWS resources that are placed behind a VPC. These are usually Application\nLoad Balancers, Network Load Balancers or a Cloud Map service. The `VpcLink` construct enables this integration.\nThe following code creates a `VpcLink` to a private VPC.\n\n```ts\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\n```\n\nAny existing `VpcLink` resource can be imported into the CDK app via the `VpcLink.fromVpcLinkAttributes()`.\n\n```ts\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});\n```\n\n### Private Integration\n\nPrivate integrations enable integrating an HTTP API route with private resources in a VPC, such as Application Load Balancers or\nAmazon ECS container-based applications.  Using private integrations, resources in a VPC can be exposed for access by\nclients outside of the VPC.\n\nThese integrations can be found in the [aws-apigatewayv2-integrations](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-apigatewayv2-integrations-readme.html) constructs library.\n\n## WebSocket API\n\nA WebSocket API in API Gateway is a collection of WebSocket routes that are integrated with backend HTTP endpoints,\nLambda functions, or other AWS services. You can use API Gateway features to help you with all aspects of the API\nlifecycle, from creation through monitoring your production APIs. [Read more](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-overview.html)\n\nWebSocket APIs have two fundamental concepts - Routes and Integrations.\n\nWebSocket APIs direct JSON messages to backend integrations based on configured routes. (Non-JSON messages are directed\nto the configured `$default` route.)\n\nIntegrations define how the WebSocket API behaves when a client reaches a specific Route. Learn more at\n[Configuring integrations](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-integration-requests.html).\n\nIntegrations are available in the `aws-apigatewayv2-integrations` module and more information is available in that module.\n\nTo add the default WebSocket routes supported by API Gateway (`$connect`, `$disconnect` and `$default`), configure them as part of api props:\n\n```ts\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const connectHandler: lambda.Function;\ndeclare const disconnectHandler: lambda.Function;\ndeclare const defaultHandler: lambda.Function;\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi', {\n  connectRouteOptions: { integration: new WebSocketLambdaIntegration('ConnectIntegration', connectHandler) },\n  disconnectRouteOptions: { integration: new WebSocketLambdaIntegration('DisconnectIntegration',disconnectHandler) },\n  defaultRouteOptions: { integration: new WebSocketLambdaIntegration('DefaultIntegration', defaultHandler) },\n});\n\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n```\n\nTo retrieve a websocket URL and a callback URL:\n\n```ts\ndeclare const webSocketStage: apigwv2.WebSocketStage;\n\nconst webSocketURL = webSocketStage.url;\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\nconst callbackURL = webSocketStage.callbackUrl;\n// https://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\n```\n\nTo add any other route:\n\n```ts\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const messageHandler: lambda.Function;\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n```\n\nTo import an existing WebSocketApi:\n\n```ts\nconst webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });\n```\n\n### Manage Connections Permission\n\nGrant permission to use API Gateway Management API of a WebSocket API by calling the `grantManageConnections` API.\nYou can use Management API to send a callback message to a connected client, get connection information, or disconnect the client. Learn more at [Use @connections commands in your backend service](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).\n\n```ts\ndeclare const fn: lambda.Function;\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nconst stage = new apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n});\n// per stage permission\nstage.grantManagementApiAccess(fn);\n// for all the stages permission\nwebSocketApi.grantManageConnections(fn);\n```\n\n### Managing access to WebSocket APIs\n\nAPI Gateway supports multiple mechanisms for [controlling and managing access to a WebSocket API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-control-access.html) through authorizers.\n\nThese authorizers can be found in the [APIGatewayV2-Authorizers](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-apigatewayv2-authorizers-readme.html) constructs library.\n\n### API Keys\n\nWebsocket APIs also support usage of API Keys. An API Key is a key that is used to grant access to an API. These are useful for controlling and tracking access to an API, when used together with [usage plans](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html). These together allow you to configure controls around API access such as quotas and throttling, along with per-API Key metrics on usage.\n\nTo require an API Key when accessing the Websocket API:\n\n```ts\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});\n```\n\n"
  },
  "repository": {
    "directory": "packages/individual-packages/aws-apigatewayv2",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Apigatewayv2.Alpha",
      "packageId": "Amazon.CDK.AWS.APIGatewayv2.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkapigatewayv2alpha"
    },
    "java": {
      "maven": {
        "artifactId": "apigatewayv2-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.apigatewayv2.alpha"
    },
    "js": {
      "npm": "@aws-cdk/aws-apigatewayv2-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-apigatewayv2-alpha",
      "module": "aws_cdk.aws_apigatewayv2_alpha"
    }
  },
  "types": {
    "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers-alpha';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});",
        "stability": "experimental",
        "summary": "Options for the Route with Integration resource."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.BatchHttpRouteOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 208
      },
      "name": "AddRoutesOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path at which all of these routes are configured."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 212
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- uses defaultAuthorizationScopes if configured on the API, otherwise none.",
            "remarks": "These scopes will override the default authorization scopes on the gateway.\nSet to [] to remove default scopes",
            "stability": "experimental",
            "summary": "The list of OIDC scopes to include in the authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 237
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- uses the default authorizer if one is specified on the HttpApi",
            "remarks": "Use NoneAuthorizer to remove the default authorizer for the api",
            "stability": "experimental",
            "summary": "Authorizer to be associated to these routes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 227
          },
          "name": "authorizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpMethod.ANY",
            "stability": "experimental",
            "summary": "The HTTP methods to be configured."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 218
          },
          "name": "methods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/http/api:AddRoutesOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.ApiMapping": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::ApiMapping",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "Create a new API mapping for API Gateway API endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const api: apigatewayv2_alpha.IApi;\ndeclare const domainName: apigatewayv2_alpha.DomainName;\ndeclare const stage: apigatewayv2_alpha.IStage;\nconst apiMapping = new apigatewayv2_alpha.ApiMapping(this, 'MyApiMapping', {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ApiMapping",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/common/api-mapping.ts",
          "line": 89
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IApiMapping"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/common/api-mapping.ts",
        "line": 64
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "import from API ID."
          },
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 68
          },
          "name": "fromApiMappingAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApiMapping"
            }
          },
          "static": true
        }
      ],
      "name": "ApiMapping",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ID of the API Mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 77
          },
          "name": "apiMappingId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApiMapping",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "API domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 87
          },
          "name": "domainName",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "API Mapping key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 82
          },
          "name": "mappingKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/api-mapping:ApiMapping"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The attributes used to import existing ApiMapping.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst apiMappingAttributes: apigatewayv2_alpha.ApiMappingAttributes = {\n  apiMappingId: 'apiMappingId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/api-mapping.ts",
        "line": 53
      },
      "name": "ApiMappingAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API mapping ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 57
          },
          "name": "apiMappingId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/api-mapping:ApiMappingAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties used to create the ApiMapping resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const api: apigatewayv2_alpha.IApi;\ndeclare const domainName: apigatewayv2_alpha.DomainName;\ndeclare const stage: apigatewayv2_alpha.IStage;\nconst apiMappingProps: apigatewayv2_alpha.ApiMappingProps = {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ApiMappingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/api-mapping.ts",
        "line": 23
      },
      "name": "ApiMappingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Api to which this mapping is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 33
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "custom domain name of the mapping target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 38
          },
          "name": "domainName",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined for the root path mapping.",
            "remarks": "The path where this stage should be mapped to on the domain",
            "stability": "experimental",
            "summary": "Api mapping key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 28
          },
          "name": "apiMappingKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default stage of the passed API for HTTP API, required for WebSocket API",
            "stability": "experimental",
            "summary": "stage for the ApiMapping resource required for WebSocket API defaults to default stage of an HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 47
          },
          "name": "stage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IStage"
          }
        }
      ],
      "symbolId": "lib/common/api-mapping:ApiMappingProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.AuthorizerPayloadVersion": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-lambda-authorizer.html",
        "stability": "experimental",
        "summary": "Payload format version for lambda authorizers."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.AuthorizerPayloadVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 27
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Version 1.0."
          },
          "name": "VERSION_1_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Version 2.0."
          },
          "name": "VERSION_2_0"
        }
      ],
      "name": "AuthorizerPayloadVersion",
      "symbolId": "lib/http/authorizer:AuthorizerPayloadVersion"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.BatchHttpRouteOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "remarks": "The options here are the ones that would be configured for all being set up.",
        "stability": "experimental",
        "summary": "Options used when configuring multiple routes, at once.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpRouteIntegration: apigatewayv2_alpha.HttpRouteIntegration;\nconst batchHttpRouteOptions: apigatewayv2_alpha.BatchHttpRouteOptions = {\n  integration: httpRouteIntegration,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.BatchHttpRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 117
      },
      "name": "BatchHttpRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The integration to be configured on this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 121
          },
          "name": "integration",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration"
          }
        }
      ],
      "symbolId": "lib/http/route:BatchHttpRouteOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.CorsHttpMethod": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});",
        "stability": "experimental",
        "summary": "Supported CORS HTTP methods."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.CorsHttpMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 145
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP ANY."
          },
          "name": "ANY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP DELETE."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP GET."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP HEAD."
          },
          "name": "HEAD"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP OPTIONS."
          },
          "name": "OPTIONS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP PATCH."
          },
          "name": "PATCH"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP POST."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP PUT."
          },
          "name": "PUT"
        }
      ],
      "name": "CorsHttpMethod",
      "symbolId": "lib/http/api:CorsHttpMethod"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.CorsPreflightOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});",
        "stability": "experimental",
        "summary": "Options for the CORS Configuration."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.CorsPreflightOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 167
      },
      "name": "CorsPreflightOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Specifies whether credentials are included in the CORS request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 172
          },
          "name": "allowCredentials",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Headers are allowed.",
            "stability": "experimental",
            "summary": "Represents a collection of allowed headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 178
          },
          "name": "allowHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Methods are allowed.",
            "stability": "experimental",
            "summary": "Represents a collection of allowed HTTP methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 184
          },
          "name": "allowMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.CorsHttpMethod"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Origins are allowed.",
            "stability": "experimental",
            "summary": "Represents a collection of allowed origins."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 190
          },
          "name": "allowOrigins",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Expose Headers are allowed.",
            "stability": "experimental",
            "summary": "Represents a collection of exposed headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 196
          },
          "name": "exposeHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "stability": "experimental",
            "summary": "The duration that the browser should cache preflight request results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 202
          },
          "name": "maxAge",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/http/api:CorsPreflightOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.DomainMappingOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});",
        "stability": "experimental",
        "summary": "Options for DomainMapping."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainMappingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/stage.ts",
        "line": 31
      },
      "name": "DomainMappingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The domain name for the mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 36
          },
          "name": "domainName",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- empty key for the root path mapping",
            "remarks": "Leave it undefined for the root path mapping.",
            "stability": "experimental",
            "summary": "The API mapping key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 42
          },
          "name": "mappingKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/stage:DomainMappingOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.DomainName": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as acm from 'aws-cdk-lib/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});",
        "stability": "experimental",
        "summary": "Custom domain resource for the API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainName",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/common/domain-name.ts",
          "line": 171
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainNameProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IDomainName"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import from attributes."
          },
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 157
          },
          "name": "fromDomainNameAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainNameAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an endpoint to a domain name."
          },
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 211
          },
          "name": "addEndpoint",
          "parameters": [
            {
              "docs": {
                "summary": "domain name endpoint properties to be set."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.EndpointOptions"
              }
            }
          ]
        }
      ],
      "name": "DomainName",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 166
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The domain name associated with the regional endpoint for this custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 167
          },
          "name": "regionalDomainName",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 168
          },
          "name": "regionalHostedZoneId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:DomainName"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.DomainNameAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "custom domain name attributes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst domainNameAttributes: apigatewayv2_alpha.DomainNameAttributes = {\n  name: 'name',\n  regionalDomainName: 'regionalDomainName',\n  regionalHostedZoneId: 'regionalHostedZoneId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainNameAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 59
      },
      "name": "DomainNameAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "domain name string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 63
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The domain name associated with the regional endpoint for this custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 68
          },
          "name": "regionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 73
          },
          "name": "regionalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:DomainNameAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.DomainNameProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as acm from 'aws-cdk-lib/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});",
        "stability": "experimental",
        "summary": "properties used for creating the DomainName."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainNameProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.EndpointOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 79
      },
      "name": "DomainNameProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 83
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- mTLS is not configured.",
            "stability": "experimental",
            "summary": "The mutual TLS authentication configuration for a custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 89
          },
          "name": "mtls",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MTLSConfig"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:DomainNameProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.EndpointOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "properties for creating a domain name endpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport { aws_certificatemanager as certificatemanager } from 'aws-cdk-lib';\n\ndeclare const certificate: certificatemanager.Certificate;\nconst endpointOptions: apigatewayv2_alpha.EndpointOptions = {\n  certificate: certificate,\n\n  // the properties below are optional\n  certificateName: 'certificateName',\n  endpointType: apigatewayv2_alpha.EndpointType.EDGE,\n  ownershipCertificate: certificate,\n  securityPolicy: apigatewayv2_alpha.SecurityPolicy.TLS_1_0,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.EndpointOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 95
      },
      "name": "EndpointOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Certificate can be both ACM issued or imported.",
            "stability": "experimental",
            "summary": "The ACM certificate for this domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 100
          },
          "name": "certificate",
          "type": {
            "fqn": "aws-cdk-lib.aws_certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No friendly certificate name",
            "stability": "experimental",
            "summary": "The user-friendly name of the certificate that will be used by the endpoint for this domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 106
          },
          "name": "certificateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "EndpointType.REGIONAL",
            "stability": "experimental",
            "summary": "The type of endpoint for this DomainName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 112
          },
          "name": "endpointType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.EndpointType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- only required when configuring mTLS",
            "remarks": "This parameter is required\nonly when you configure mutual TLS authentication and you specify an ACM imported or private CA certificate\nfor `certificate`. The ownership certificate validates that you have permissions to use the domain name.",
            "stability": "experimental",
            "summary": "A public certificate issued by ACM to validate that you own a custom domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 126
          },
          "name": "ownershipCertificate",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SecurityPolicy.TLS_1_2",
            "stability": "experimental",
            "summary": "The Transport Layer Security (TLS) version + cipher suite for this domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 118
          },
          "name": "securityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.SecurityPolicy"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:EndpointOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.EndpointType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Endpoint type for a domain name."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.EndpointType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 21
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "For an edge-optimized custom domain name."
          },
          "name": "EDGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "For a regional custom domain name."
          },
          "name": "REGIONAL"
        }
      ],
      "name": "EndpointType",
      "symbolId": "lib/common/domain-name:EndpointType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.GrantInvokeOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for granting invoke access.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst grantInvokeOptions: apigatewayv2_alpha.GrantInvokeOptions = {\n  httpMethods: [apigatewayv2_alpha.HttpMethod.ANY],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.GrantInvokeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 41
      },
      "name": "GrantInvokeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the HttpMethod of the route",
            "stability": "experimental",
            "summary": "The HTTP methods to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 46
          },
          "name": "httpMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/http/route:GrantInvokeOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpApi": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::ApiGatewayV2::Api"
        },
        "example": "import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});",
        "stability": "experimental",
        "summary": "Create a new API Gateway HTTP API endpoint."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/api.ts",
          "line": 346
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.IApi"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 304
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing HTTP API into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 308
          },
          "name": "fromHttpApiAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpApiAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The routes all go to the same path, but for different\nmethods.",
            "stability": "experimental",
            "summary": "Add multiple routes that uses the same configuration."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 453
          },
          "name": "addRoutes",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRoute"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a new stage."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 441
          },
          "name": "addStage",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStage"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a new VpcLink."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 271
          },
          "name": "addVpcLink",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLink"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this Api Gateway."
          },
          "locationInModule": {
            "filename": "lib/common/base.ts",
            "line": 15
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the number of client-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 247
          },
          "name": "metricClientError",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the total number API requests in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 259
          },
          "name": "metricCount",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the amount of data processed in bytes."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 255
          },
          "name": "metricDataProcessed",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the time between when API Gateway relays a request to the backend and when it receives a response from the backend."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 263
          },
          "name": "metricIntegrationLatency",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "The latency includes the integration latency and other API Gateway overhead.",
            "stability": "experimental",
            "summary": "The time between when API Gateway receives a request from a client and when it returns a response to the client."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 267
          },
          "name": "metricLatency",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the number of server-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 251
          },
          "name": "metricServerError",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "HttpApi",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get the default endpoint for this API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 423
          },
          "name": "apiEndpoint",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of this API Gateway API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 328
          },
          "name": "apiId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of this API Gateway HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 329
          },
          "name": "httpApiId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The default stage of this API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 339
          },
          "name": "defaultStage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies whether clients can invoke this HTTP API by using the default execute-api endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 334
          },
          "name": "disableExecuteApiEndpoint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is different from `httpApiId`.",
            "stability": "experimental",
            "summary": "A human friendly name for this HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 327
          },
          "name": "httpApiName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Returns `undefined` if `createDefaultStage` is unset.",
            "stability": "experimental",
            "summary": "Get the URL to the default stage of this API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 434
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/api:HttpApi"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpApiAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Attributes for importing an HttpApi into the CDK.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst httpApiAttributes: apigatewayv2_alpha.HttpApiAttributes = {\n  httpApiId: 'httpApiId',\n\n  // the properties below are optional\n  apiEndpoint: 'apiEndpoint',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpApiAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 288
      },
      "name": "HttpApiAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the HttpApi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 292
          },
          "name": "httpApiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- throws an error if apiEndpoint is accessed.",
            "stability": "experimental",
            "summary": "The endpoint URL of the HttpApi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 297
          },
          "name": "apiEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/api:HttpApiAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});",
        "stability": "experimental",
        "summary": "Properties to initialize an instance of `HttpApi`."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 79
      },
      "name": "HttpApiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- id of the HttpApi construct.",
            "stability": "experimental",
            "summary": "Name for the HTTP API resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 84
          },
          "name": "apiName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CORS disabled.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html",
            "stability": "experimental",
            "summary": "Specifies a CORS configuration for an API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 109
          },
          "name": "corsPreflight",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.CorsPreflightOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether a default stage and deployment should be automatically created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 102
          },
          "name": "createDefaultStage",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no default authorization scopes",
            "stability": "experimental",
            "summary": "Default OIDC scopes attached to all routes in the gateway, unless explicitly configured on the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 139
          },
          "name": "defaultAuthorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No authorizer",
            "stability": "experimental",
            "summary": "Default Authorizer to applied to all routes in the gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 132
          },
          "name": "defaultAuthorizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no default domain mapping configured. meaningless if `createDefaultStage` is `false`.",
            "stability": "experimental",
            "summary": "Configure a custom domain with the API mapping resource to the HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 116
          },
          "name": "defaultDomainMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainMappingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "An integration that will be configured on the catch-all route ($default)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 96
          },
          "name": "defaultIntegration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "The description of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 90
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false execute-api endpoint enabled.",
            "remarks": "By default, clients can invoke your API with the default\n`https://{api_id}.execute-api.{region}.amazonaws.com` endpoint. Enable\nthis if you would like clients to use your custom domain name.",
            "stability": "experimental",
            "summary": "Specifies whether clients can invoke your API using the default endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 125
          },
          "name": "disableExecuteApiEndpoint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/http/api:HttpApiProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Authorizer",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "An authorizer for Http Apis.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as cdk from 'aws-cdk-lib';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\nconst httpAuthorizer = new apigatewayv2_alpha.HttpAuthorizer(this, 'MyHttpAuthorizer', {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2_alpha.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2_alpha.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizer",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/authorizer.ts",
          "line": 158
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpAuthorizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 137
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing HTTP Authorizer into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 141
          },
          "name": "fromHttpAuthorizerAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer"
            }
          },
          "static": true
        }
      ],
      "name": "HttpAuthorizer",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 156
          },
          "name": "authorizerId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/authorizer:HttpAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Reference to an http authorizer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst httpAuthorizerAttributes: apigatewayv2_alpha.HttpAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 116
      },
      "name": "HttpAuthorizerAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 120
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Possible values are:\n- JWT - JSON Web Token Authorizer\n- CUSTOM - Lambda Authorizer\n- NONE - No Authorization",
            "stability": "experimental",
            "summary": "Type of authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 130
          },
          "name": "authorizerType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/authorizer:HttpAuthorizerAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize an instance of `HttpAuthorizer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as cdk from 'aws-cdk-lib';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\nconst httpAuthorizerProps: apigatewayv2_alpha.HttpAuthorizerProps = {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2_alpha.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2_alpha.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 38
      },
      "name": "HttpAuthorizerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "HTTP Api to attach the authorizer to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 48
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource",
            "stability": "experimental",
            "summary": "The identity source for which authorization is requested."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 59
          },
          "name": "identitySource",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 53
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- id of the HttpAuthorizer construct.",
            "stability": "experimental",
            "summary": "Name of the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 43
          },
          "name": "authorizerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- required for Request authorizer types",
            "remarks": "For REQUEST authorizers, this must be a well-formed Lambda function URI.",
            "stability": "experimental",
            "summary": "The authorizer's Uniform Resource Identifier (URI)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 97
          },
          "name": "authorizerUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The lambda authorizer must return an IAM policy as its response",
            "remarks": "If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.",
            "stability": "experimental",
            "summary": "Specifies whether a Lambda authorizer returns a response in a simple format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 81
          },
          "name": "enableSimpleResponses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- required for JWT authorizer typess.",
            "remarks": "A valid JWT must provide an aud that matches at least one entry in this list.",
            "stability": "experimental",
            "summary": "A list of the intended recipients of the JWT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 66
          },
          "name": "jwtAudience",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- required for JWT authorizer types.",
            "stability": "experimental",
            "summary": "The base domain of the identity provider that issues JWT."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 72
          },
          "name": "jwtIssuer",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AuthorizerPayloadVersion.VERSION_2_0 if the authorizer type is HttpAuthorizerType.LAMBDA",
            "stability": "experimental",
            "summary": "Specifies the format of the payload sent to an HTTP API Lambda authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 88
          },
          "name": "payloadFormatVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.AuthorizerPayloadVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- API Gateway will not cache authorizer responses",
            "remarks": "Max 1 hour.",
            "stability": "experimental",
            "summary": "How long APIGateway should cache the results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 104
          },
          "name": "resultsCacheTtl",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/http/authorizer:HttpAuthorizerProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Supported Authorizer types."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpAuthorizerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "IAM Authorizer."
          },
          "name": "IAM"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "JSON Web Tokens."
          },
          "name": "JWT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Lambda Authorizer."
          },
          "name": "LAMBDA"
        }
      ],
      "name": "HttpAuthorizerType",
      "symbolId": "lib/http/authorizer:HttpAuthorizerType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpConnectionType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Supported connection types."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpConnectionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 118
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "For private connections between API Gateway and resources in a VPC."
          },
          "name": "VPC_LINK"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "For connections through public routable internet."
          },
          "name": "INTERNET"
        }
      ],
      "name": "HttpConnectionType",
      "symbolId": "lib/http/integration:HttpConnectionType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Integration",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "The integration for an API route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\ndeclare const integrationCredentials: apigatewayv2_alpha.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2_alpha.PayloadFormatVersion;\nconst httpIntegration = new apigatewayv2_alpha.HttpIntegration(this, 'MyHttpIntegration', {\n  httpApi: httpApi,\n  integrationType: apigatewayv2_alpha.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2_alpha.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2_alpha.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/integration.ts",
          "line": 245
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpIntegration"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 240
      },
      "name": "HttpIntegration",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API associated with this integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 243
          },
          "name": "httpApi",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpIntegration",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 241
          },
          "name": "integrationId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IIntegration",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/integration:HttpIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The integration properties.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\ndeclare const integrationCredentials: apigatewayv2_alpha.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2_alpha.PayloadFormatVersion;\nconst httpIntegrationProps: apigatewayv2_alpha.HttpIntegrationProps = {\n  httpApi: httpApi,\n  integrationType: apigatewayv2_alpha.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2_alpha.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2_alpha.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 158
      },
      "name": "HttpIntegrationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API to which this integration should be bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 162
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 167
          },
          "name": "integrationType",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "Supported only for HTTP APIs.",
            "stability": "experimental",
            "summary": "The ID of the VPC link for a private integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 198
          },
          "name": "connectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpConnectionType.INTERNET",
            "stability": "experimental",
            "summary": "The type of the network connection to the integration endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 205
          },
          "name": "connectionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpConnectionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no credentials, use resource-based permissions on supported AWS services",
            "stability": "experimental",
            "summary": "The credentials with which to invoke the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 233
          },
          "name": "credentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required if no `integrationUri` is defined.",
            "remarks": "Used for AWS Service integrations, specifies the target of the integration.",
            "stability": "experimental",
            "summary": "Integration subtype."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 176
          },
          "name": "integrationSubtype",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationSubtype"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required if no `integrationSubtype` is defined.",
            "remarks": "This will be the function ARN in the case of `HttpIntegrationType.AWS_PROXY`,\nor HTTP URL in the case of `HttpIntegrationType.HTTP_PROXY`.",
            "stability": "experimental",
            "summary": "Integration URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 185
          },
          "name": "integrationUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none. required if the integration type is `HttpIntegrationType.HTTP_PROXY`.",
            "stability": "experimental",
            "summary": "The HTTP method to use when calling the underlying HTTP proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 191
          },
          "name": "method",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined requests are sent to the backend unmodified",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html",
            "stability": "experimental",
            "summary": "Specifies how to transform HTTP requests before sending them to the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 226
          },
          "name": "parameterMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to latest in the case of HttpIntegrationType.AWS_PROXY`, irrelevant otherwise.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",
            "stability": "experimental",
            "summary": "The version of the payload format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 212
          },
          "name": "payloadFormatVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined private integration traffic will use HTTP protocol",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-integration-tlsconfig.html",
            "stability": "experimental",
            "summary": "Specifies the TLS configuration for a private integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 219
          },
          "name": "secureServerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/integration:HttpIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationSubtype": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html",
        "stability": "experimental",
        "summary": "Supported integration subtypes."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationSubtype",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 50
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "EventBridge PutEvents integration."
          },
          "name": "EVENTBRIDGE_PUT_EVENTS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "SQS SendMessage integration."
          },
          "name": "SQS_SEND_MESSAGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "SQS ReceiveMessage integration,."
          },
          "name": "SQS_RECEIVE_MESSAGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "SQS DeleteMessage integration,."
          },
          "name": "SQS_DELETE_MESSAGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "SQS PurgeQueue integration."
          },
          "name": "SQS_PURGE_QUEUE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "AppConfig GetConfiguration integration."
          },
          "name": "APPCONFIG_GET_CONFIGURATION"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Kinesis PutRecord integration."
          },
          "name": "KINESIS_PUT_RECORD"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Step Functions StartExecution integration."
          },
          "name": "STEPFUNCTIONS_START_EXECUTION"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Step Functions StartSyncExecution integration."
          },
          "name": "STEPFUNCTIONS_START_SYNC_EXECUTION"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Step Functions StopExecution integration."
          },
          "name": "STEPFUNCTIONS_STOP_EXECUTION"
        }
      ],
      "name": "HttpIntegrationSubtype",
      "symbolId": "lib/http/integration:HttpIntegrationSubtype"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Supported integration types."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 21
      },
      "members": [
        {
          "docs": {
            "remarks": "For integrating the route or method request with an HTTP endpoint, with the\nclient request passed through as-is. This is also referred to as HTTP proxy\nintegration. For HTTP API private integrations, use an HTTP_PROXY integration.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-http.html",
            "stability": "experimental",
            "summary": "Integration type is an HTTP proxy."
          },
          "name": "HTTP_PROXY"
        },
        {
          "docs": {
            "remarks": "For integrating the route or method request with a Lambda function or other\nAWS service action. This integration is also referred to as a Lambda proxy\nintegration.",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",
            "stability": "experimental",
            "summary": "Integration type is an AWS proxy."
          },
          "name": "AWS_PROXY"
        }
      ],
      "name": "HttpIntegrationType",
      "symbolId": "lib/http/integration:HttpIntegrationType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});",
        "stability": "experimental",
        "summary": "Supported HTTP methods."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 52
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP ANY."
          },
          "name": "ANY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP DELETE."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP GET."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP HEAD."
          },
          "name": "HEAD"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP OPTIONS."
          },
          "name": "OPTIONS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP PATCH."
          },
          "name": "PATCH"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP POST."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "HTTP PUT."
          },
          "name": "PUT"
        }
      ],
      "name": "HttpMethod",
      "symbolId": "lib/http/route:HttpMethod"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpNoneAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpJwtAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers-alpha';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst issuer = 'https://test.us.auth0.com';\nconst authorizer = new HttpJwtAuthorizer('DefaultAuthorizer', issuer, {\n  jwtAudience: ['3131231'],\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi', {\n  defaultAuthorizer: authorizer,\n  defaultAuthorizationScopes: ['read:books'],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIdIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books/{id}',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizationScopes: ['write:books']\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('LoginIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/login',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizer: new apigwv2.HttpNoneAuthorizer(),\n});",
        "stability": "experimental",
        "summary": "Explicitly configure no authorizers on specific HTTP API routes."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpNoneAuthorizer",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 259
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this authorizer to a specified Http route."
          },
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 260
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerConfig"
            }
          }
        }
      ],
      "name": "HttpNoneAuthorizer",
      "symbolId": "lib/http/authorizer:HttpNoneAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRoute": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Route",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "Route class that creates the Route for API Gateway HTTP API.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2_alpha.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2_alpha.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2_alpha.HttpRouteKey;\nconst httpRoute = new apigatewayv2_alpha.HttpRoute(this, 'MyHttpRoute', {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRoute",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/route.ts",
          "line": 183
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 174
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method requires that the authorizer of the route is undefined or is\nan `HttpIamAuthorizer`.",
            "stability": "experimental",
            "summary": "Grant access to invoke the route."
          },
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 242
          },
          "name": "grantInvoke",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.GrantInvokeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        }
      ],
      "name": "HttpRoute",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API associated with this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 176
          },
          "name": "httpApi",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the arn of the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 178
          },
          "name": "routeArn",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 175
          },
          "name": "routeId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IRoute",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the path component of this HTTP route, `undefined` if the path is the catch-all route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 177
          },
          "name": "path",
          "optional": true,
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/route:HttpRoute"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerBindOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Input to the bind() operation, that binds an authorizer to a route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const httpRoute: apigatewayv2_alpha.HttpRoute;\nconst httpRouteAuthorizerBindOptions: apigatewayv2_alpha.HttpRouteAuthorizerBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 201
      },
      "name": "HttpRouteAuthorizerBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The route to which the authorizer is being bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 205
          },
          "name": "route",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The scope for any constructs created as part of the bind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 209
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        }
      ],
      "symbolId": "lib/http/authorizer:HttpRouteAuthorizerBindOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerConfig": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Results of binding an authorizer to an http route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst httpRouteAuthorizerConfig: apigatewayv2_alpha.HttpRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizerId: 'authorizerId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 215
      },
      "name": "HttpRouteAuthorizerConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Possible values are:\n- AWS_IAM - IAM Authorizer\n- JWT - JSON Web Token Authorizer\n- CUSTOM - Lambda Authorizer\n- NONE - No Authorization",
            "stability": "experimental",
            "summary": "The type of authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 232
          },
          "name": "authorizationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no authorization scopes",
            "stability": "experimental",
            "summary": "The list of OIDC scopes to include in the authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 238
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No authorizer id (useful for AWS_IAM route authorizer)",
            "stability": "experimental",
            "summary": "The authorizer id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 221
          },
          "name": "authorizerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/authorizer:HttpRouteAuthorizerConfig"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});",
        "stability": "experimental",
        "summary": "The interface that various route integration classes will inherit."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Initialize an integration for a route on http api."
        },
        "locationInModule": {
          "filename": "lib/http/integration.ts",
          "line": 303
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying `HttpIntegration` construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 296
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 350
          },
          "name": "bind",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "In some cases, there is\nsome additional work to do, such as adding permissions for the API to access\nthe target. This work is necessary whether the integration has just been\ncreated for this route or it is an existing one, previously created for other\nroutes. In most cases, however, concrete implementations do not need to\noverride this method.",
            "stability": "experimental",
            "summary": "Complete the binding of the integration to the route."
          },
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 343
          },
          "name": "completeBind",
          "parameters": [
            {
              "name": "_options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationBindOptions"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "HttpRouteIntegration",
      "symbolId": "lib/http/integration:HttpRouteIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationBindOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to the HttpRouteIntegration during its bind operation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const httpRoute: apigatewayv2_alpha.HttpRoute;\nconst httpRouteIntegrationBindOptions: apigatewayv2_alpha.HttpRouteIntegrationBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 279
      },
      "name": "HttpRouteIntegrationBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The route to which this is being bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 283
          },
          "name": "route",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the `HttpRouteIntegration` being bound creates additional constructs,\nthis will be used as their parent scope.",
            "stability": "experimental",
            "summary": "The current scope in which the bind is occurring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 290
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        }
      ],
      "symbolId": "lib/http/integration:HttpRouteIntegrationBindOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationConfig": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Config returned back as a result of the bind.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const integrationCredentials: apigatewayv2_alpha.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2_alpha.PayloadFormatVersion;\nconst httpRouteIntegrationConfig: apigatewayv2_alpha.HttpRouteIntegrationConfig = {\n  payloadFormatVersion: payloadFormatVersion,\n  type: apigatewayv2_alpha.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2_alpha.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  subtype: apigatewayv2_alpha.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  uri: 'uri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegrationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 356
      },
      "name": "HttpRouteIntegrationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",
            "stability": "experimental",
            "summary": "Payload format version in the case of lambda proxy integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 402
          },
          "name": "payloadFormatVersion",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 360
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "Supported only for HTTP APIs.",
            "stability": "experimental",
            "summary": "The ID of the VPC link for a private integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 388
          },
          "name": "connectionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpConnectionType.INTERNET",
            "stability": "experimental",
            "summary": "The type of the network connection to the integration endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 395
          },
          "name": "connectionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpConnectionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no credentials, use resource-based permissions on supported AWS services",
            "stability": "experimental",
            "summary": "The credentials with which to invoke the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 423
          },
          "name": "credentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "Required for `HttpIntegrationType.HTTP_PROXY`",
            "stability": "experimental",
            "summary": "The HTTP method that must be used to invoke the underlying proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 381
          },
          "name": "method",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined requests are sent to the backend unmodified",
            "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html",
            "stability": "experimental",
            "summary": "Specifies how to transform HTTP requests before sending them to the backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 416
          },
          "name": "parameterMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined private integration traffic will use HTTP protocol",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-integration-tlsconfig.html",
            "stability": "experimental",
            "summary": "Specifies the server name to verified by HTTPS when calling the backend integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 409
          },
          "name": "secureServerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required if no `integrationUri` is defined.",
            "stability": "experimental",
            "summary": "Integration subtype."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 367
          },
          "name": "subtype",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpIntegrationSubtype"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required if no `integrationSubtype` is defined.",
            "stability": "experimental",
            "summary": "Integration URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 374
          },
          "name": "uri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/integration:HttpRouteIntegrationConfig"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteKey": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "remarks": "This class models that combination.",
        "stability": "experimental",
        "summary": "HTTP route in APIGateway is a combination of the HTTP method and the path component.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst httpRouteKey = apigatewayv2_alpha.HttpRouteKey.with('path', /* all optional props */ apigatewayv2_alpha.HttpMethod.ANY);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteKey",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 75
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a route key with the combination of the path and the method."
          },
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 85
          },
          "name": "with",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "default is 'ANY'."
              },
              "name": "method",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteKey"
            }
          },
          "static": true
        }
      ],
      "name": "HttpRouteKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The catch-all route of the API, i.e., when no other routes match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 79
          },
          "name": "DEFAULT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteKey"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The key to the RouteKey as recognized by APIGateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 99
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The method of the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 95
          },
          "name": "method",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod"
          }
        },
        {
          "docs": {
            "remarks": "Returns `undefined` when `RouteKey.DEFAULT` is used.",
            "stability": "experimental",
            "summary": "The path part of this RouteKey."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 104
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/route:HttpRouteKey"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize a new Route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2_alpha.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2_alpha.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2_alpha.HttpRouteKey;\nconst httpRouteProps: apigatewayv2_alpha.HttpRouteProps = {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.BatchHttpRouteOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 127
      },
      "name": "HttpRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the API the route is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 131
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is a combination of an HTTP method and an HTTP path.",
            "stability": "experimental",
            "summary": "The key to this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 136
          },
          "name": "routeKey",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional authorization scopes",
            "remarks": "These scopes will be merged with the scopes from the attached authorizer",
            "stability": "experimental",
            "summary": "The list of OIDC scopes to include in the authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 150
          },
          "name": "authorizationScopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No authorizer",
            "stability": "experimental",
            "summary": "Authorizer for a WebSocket API or an HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 142
          },
          "name": "authorizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer"
          }
        }
      ],
      "symbolId": "lib/http/route:HttpRouteProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpStage": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::ApiGatewayV2::Stage"
        },
        "example": "declare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});",
        "stability": "experimental",
        "summary": "Represents a stage where an instance of the API is deployed."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/stage.ts",
          "line": 161
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
        "@aws-cdk/aws-apigatewayv2-alpha.IStage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/stage.ts",
        "line": 136
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing stage into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 140
          },
          "name": "fromHttpStageAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this HTTP Api Gateway Stage."
          },
          "locationInModule": {
            "filename": "lib/common/base.ts",
            "line": 62
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the number of client-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 107
          },
          "name": "metricClientError",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the total number API requests in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 119
          },
          "name": "metricCount",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the amount of data processed in bytes."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 115
          },
          "name": "metricDataProcessed",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the time between when API Gateway relays a request to the backend and when it receives a response from the backend."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 123
          },
          "name": "metricIntegrationLatency",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "The latency includes the integration latency and other API Gateway overhead.",
            "stability": "experimental",
            "summary": "The time between when API Gateway receives a request from a client and when it returns a response to the client."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 127
          },
          "name": "metricLatency",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Metric for the number of server-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 111
          },
          "name": "metricServerError",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "HttpStage",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The API this stage is associated to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 159
          },
          "name": "api",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 157
          },
          "name": "baseApi",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApi"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The custom domain URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 194
          },
          "name": "domainUrl",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "its primary identifier.",
            "stability": "experimental",
            "summary": "The name of the stage;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 158
          },
          "name": "stageName",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 188
          },
          "name": "url",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/stage:HttpStage"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpStageAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The attributes used to import existing HttpStage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const httpApi: apigatewayv2_alpha.HttpApi;\nconst httpStageAttributes: apigatewayv2_alpha.HttpStageAttributes = {\n  api: httpApi,\n  stageName: 'stageName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageAttributes",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.StageAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/stage.ts",
        "line": 96
      },
      "name": "HttpStageAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API to which this stage is associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 100
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        }
      ],
      "symbolId": "lib/http/stage:HttpStageAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpStageOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});",
        "stability": "experimental",
        "summary": "The options to create a new Stage for an HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageOptions",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.StageOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/stage.ts",
        "line": 75
      },
      "name": "HttpStageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'$default' the default stage of the API. This stage will have the URL at the root of the API endpoint.",
            "remarks": "See `StageName` class for more details.",
            "stability": "experimental",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 80
          },
          "name": "stageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/stage:HttpStageOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.HttpStageProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});",
        "stability": "experimental",
        "summary": "Properties to initialize an instance of `HttpStage`."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpStageProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpStageOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/stage.ts",
        "line": 86
      },
      "name": "HttpStageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API to which this stage is associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 90
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        }
      ],
      "symbolId": "lib/http/stage:HttpStageProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IApi": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a API Gateway HTTP/WebSocket API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/api.ts",
        "line": 7
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "default": "- average over 5 minutes",
            "stability": "experimental",
            "summary": "Return the given named metric for this Api Gateway."
          },
          "locationInModule": {
            "filename": "lib/common/api.ts",
            "line": 25
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The default endpoint for an API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api.ts",
            "line": 18
          },
          "name": "apiEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The identifier of this API Gateway API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api.ts",
            "line": 12
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/api:IApi"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IApiMapping": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html",
        "stability": "experimental",
        "summary": "Represents an ApiGatewayV2 ApiMapping resource."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApiMapping",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/api-mapping.ts",
        "line": 12
      },
      "name": "IApiMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "ID of the api mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/api-mapping.ts",
            "line": 17
          },
          "name": "apiMappingId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/api-mapping:IApiMapping"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an Authorizer."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/authorizer.ts",
        "line": 6
      },
      "name": "IAuthorizer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Id of the Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/authorizer.ts",
            "line": 11
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/authorizer:IAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IDomainName": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html",
        "stability": "experimental",
        "summary": "Represents an APIGatewayV2 DomainName."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IDomainName",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 36
      },
      "name": "IDomainName",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 41
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The domain name associated with the regional endpoint for this custom domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 47
          },
          "name": "regionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 53
          },
          "name": "regionalHostedZoneId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:IDomainName"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IApi"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/api.ts",
        "line": 17
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add a new VpcLink."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 73
          },
          "name": "addVpcLink",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLink"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the number of client-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 30
          },
          "name": "metricClientError",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SampleCount over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the total number API requests in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 51
          },
          "name": "metricCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the amount of data processed in bytes."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 44
          },
          "name": "metricDataProcessed",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no statistic",
            "stability": "experimental",
            "summary": "Metric for the time between when API Gateway relays a request to the backend and when it receives a response from the backend."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 59
          },
          "name": "metricIntegrationLatency",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no statistic",
            "remarks": "The latency includes the integration latency and other API Gateway overhead.",
            "stability": "experimental",
            "summary": "The time between when API Gateway receives a request from a client and when it returns a response to the client."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 68
          },
          "name": "metricLatency",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the number of server-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 37
          },
          "name": "metricServerError",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IHttpApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "deprecated": "- use apiId instead",
            "stability": "deprecated",
            "summary": "The identifier of this API Gateway HTTP API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/api.ts",
            "line": 23
          },
          "name": "httpApiId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/api:IHttpApi"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "An authorizer for HTTP APIs."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpAuthorizer",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 110
      },
      "name": "IHttpAuthorizer",
      "symbolId": "lib/http/authorizer:IHttpAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an Integration for an HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpIntegration",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IIntegration"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 13
      },
      "name": "IHttpIntegration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API associated with this integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 15
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        }
      ],
      "symbolId": "lib/http/integration:IHttpIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Route for an HTTP API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRoute",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IRoute"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/route.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This method requires that the authorizer of the route is undefined or is\nan `HttpIamAuthorizer`.",
            "stability": "experimental",
            "summary": "Grant access to invoke the route."
          },
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 35
          },
          "name": "grantInvoke",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.GrantInvokeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        }
      ],
      "name": "IHttpRoute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP API associated with this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 17
          },
          "name": "httpApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Returns the arn of the route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 28
          },
          "name": "routeArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Returns the path component of this HTTP route, `undefined` if the path is the catch-all route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/route.ts",
            "line": 22
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/route:IHttpRoute"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "An authorizer that can attach to an Http Route."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/authorizer.ts",
        "line": 244
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Bind this authorizer to a specified Http route."
          },
          "locationInModule": {
            "filename": "lib/http/authorizer.ts",
            "line": 248
          },
          "name": "bind",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteAuthorizerConfig"
            }
          }
        }
      ],
      "name": "IHttpRouteAuthorizer",
      "symbolId": "lib/http/authorizer:IHttpRouteAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the HttpStage."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpStage",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IStage"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/stage.ts",
        "line": 15
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the number of client-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 31
          },
          "name": "metricClientError",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SampleCount over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the total number API requests in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 52
          },
          "name": "metricCount",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the amount of data processed in bytes."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 45
          },
          "name": "metricDataProcessed",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no statistic",
            "stability": "experimental",
            "summary": "Metric for the time between when API Gateway relays a request to the backend and when it receives a response from the backend."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 60
          },
          "name": "metricIntegrationLatency",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no statistic",
            "remarks": "The latency includes the integration latency and other API Gateway overhead.",
            "stability": "experimental",
            "summary": "The time between when API Gateway receives a request from a client and when it returns a response to the client."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 69
          },
          "name": "metricLatency",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- sum over 5 minutes",
            "stability": "experimental",
            "summary": "Metric for the number of server-side errors captured in a given period."
          },
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 38
          },
          "name": "metricServerError",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IHttpStage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API this stage is associated to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 19
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IHttpApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The custom domain URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/stage.ts",
            "line": 24
          },
          "name": "domainUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/stage:IHttpStage"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an integration to an API Route."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IIntegration",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/integration.ts",
        "line": 6
      },
      "name": "IIntegration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Id of the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/integration.ts",
            "line": 11
          },
          "name": "integrationId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/integration:IIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IMappingValue": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Mapping Value."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IMappingValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-mapping.ts",
        "line": 4
      },
      "name": "IMappingValue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Represents a Mapping Value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 8
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-mapping:IMappingValue"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IRoute": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a route."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IRoute",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/route.ts",
        "line": 6
      },
      "name": "IRoute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Id of the Route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/route.ts",
            "line": 11
          },
          "name": "routeId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/route:IRoute"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IStage": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Stage."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/stage.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "default": "- average over 5 minutes",
            "stability": "experimental",
            "summary": "Return the given named metric for this HTTP Api Gateway Stage."
          },
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 25
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "IStage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "its primary identifier.",
            "stability": "experimental",
            "summary": "The name of the stage;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 13
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 18
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/stage:IStage"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an API Gateway VpcLink."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/vpc-link.ts",
        "line": 9
      },
      "name": "IVpcLink",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to which this VPC Link is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 19
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Physical ID of the VpcLink resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 14
          },
          "name": "vpcLinkId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/vpc-link:IVpcLink"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a WebSocket API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IApi"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/api.ts",
        "line": 12
      },
      "name": "IWebSocketApi",
      "symbolId": "lib/websocket/api:IWebSocketApi"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "An authorizer for WebSocket APIs."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketAuthorizer",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 56
      },
      "name": "IWebSocketAuthorizer",
      "symbolId": "lib/websocket/authorizer:IWebSocketAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents an Integration for an WebSocket API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketIntegration",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IIntegration"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 11
      },
      "name": "IWebSocketIntegration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API associated with this integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 13
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/integration:IWebSocketIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Route for an WebSocket API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IRoute"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/route.ts",
        "line": 12
      },
      "name": "IWebSocketRoute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The key to this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 22
          },
          "name": "routeKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API associated with this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 16
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/route:IWebSocketRoute"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "An authorizer that can attach to an WebSocket Route."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 160
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Bind this authorizer to a specified WebSocket route."
          },
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 164
          },
          "name": "bind",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerConfig"
            }
          }
        }
      ],
      "name": "IWebSocketRouteAuthorizer",
      "symbolId": "lib/websocket/authorizer:IWebSocketRouteAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the WebSocketStage."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IStage"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/stage.ts",
        "line": 12
      },
      "name": "IWebSocketStage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API this stage is associated to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 16
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can use the callback URL to send messages to the client from the backend system.\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html",
            "stability": "experimental",
            "summary": "The callback URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 24
          },
          "name": "callbackUrl",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/stage:IWebSocketStage"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Credentials used for AWS Service integrations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst integrationCredentials = apigatewayv2_alpha.IntegrationCredentials.fromRole(role);",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 96
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Use the specified role for integration requests."
          },
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 100
          },
          "name": "fromRole",
          "parameters": [
            {
              "name": "role",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IRole"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Use the calling user's identity to call the integration."
          },
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 105
          },
          "name": "useCallerIdentity",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IntegrationCredentials"
            }
          },
          "static": true
        }
      ],
      "name": "IntegrationCredentials",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 112
          },
          "name": "credentialsArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/integration:IntegrationCredentials"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.MTLSConfig": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as acm from 'aws-cdk-lib/aws-certificatemanager';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\ndeclare const bucket: s3.Bucket;\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});",
        "stability": "experimental",
        "summary": "The mTLS authentication configuration for a custom domain name."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MTLSConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 132
      },
      "name": "MTLSConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The bucket that the trust store is hosted in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 136
          },
          "name": "bucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The key in S3 to look at for the trust store."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 140
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- latest version",
            "remarks": "To specify a version, you must have versioning enabled for the S3 bucket.",
            "stability": "experimental",
            "summary": "The version of the S3 object that contains your truststore."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/domain-name.ts",
            "line": 147
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/domain-name:MTLSConfig"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.MappingValue": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
        "stability": "experimental",
        "summary": "Represents a Mapping Value."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/parameter-mapping.ts",
          "line": 65
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IMappingValue"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/parameter-mapping.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a context variable mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 48
          },
          "name": "contextVariable",
          "parameters": [
            {
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a custom mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 58
          },
          "name": "custom",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a request body mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 33
          },
          "name": "requestBody",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a header mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 23
          },
          "name": "requestHeader",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a request path mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 38
          },
          "name": "requestPath",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a request path parameter mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 43
          },
          "name": "requestPathParam",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a query string mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 28
          },
          "name": "requestQueryString",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a stage variable mapping value."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 53
          },
          "name": "stageVariable",
          "parameters": [
            {
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
            }
          },
          "static": true
        }
      ],
      "name": "MappingValue",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Creates an empty mapping value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 18
          },
          "name": "NONE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Represents a Mapping Value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 63
          },
          "name": "value",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IMappingValue",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/parameter-mapping:MappingValue"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
        "stability": "experimental",
        "summary": "Represents a Parameter Mapping."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/parameter-mapping.ts",
          "line": 90
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/parameter-mapping.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping from an object."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 78
          },
          "name": "fromObject",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to append a header."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 97
          },
          "name": "appendHeader",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to append a query string."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 121
          },
          "name": "appendQueryString",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a custom mapping."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 153
          },
          "name": "custom",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to overwrite a header."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 105
          },
          "name": "overwriteHeader",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to overwrite a path."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 145
          },
          "name": "overwritePath",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to overwrite a querystring."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 129
          },
          "name": "overwriteQueryString",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.MappingValue"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to remove a header."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 113
          },
          "name": "removeHeader",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a mapping to remove a querystring."
          },
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 137
          },
          "name": "removeQueryString",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping"
            }
          }
        }
      ],
      "name": "ParameterMapping",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Represents all created parameter mappings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-mapping.ts",
            "line": 89
          },
          "name": "mappings",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/parameter-mapping:ParameterMapping"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html",
        "stability": "experimental",
        "summary": "Payload format version for lambda proxy integration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst payloadFormatVersion = apigatewayv2_alpha.PayloadFormatVersion.custom('version');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/integration.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "remarks": "Typically used if there is a version number that the CDK doesn't support yet",
            "stability": "experimental",
            "summary": "A custom payload version."
          },
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 143
          },
          "name": "custom",
          "parameters": [
            {
              "name": "version",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion"
            }
          },
          "static": true
        }
      ],
      "name": "PayloadFormatVersion",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Version 1.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 135
          },
          "name": "VERSION_1_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Version 2.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 137
          },
          "name": "VERSION_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "version as a string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/integration.ts",
            "line": 148
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/integration:PayloadFormatVersion"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.SecurityPolicy": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The minimum version of the SSL protocol that you want API Gateway to use for HTTPS connections."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.SecurityPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/common/domain-name.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cipher suite TLS 1.0."
          },
          "name": "TLS_1_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cipher suite TLS 1.2."
          },
          "name": "TLS_1_2"
        }
      ],
      "name": "SecurityPolicy",
      "symbolId": "lib/common/domain-name:SecurityPolicy"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.StageAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The attributes used to import existing Stage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst stageAttributes: apigatewayv2_alpha.StageAttributes = {\n  stageName: 'stageName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.StageAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/stage.ts",
        "line": 74
      },
      "name": "StageAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 78
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/common/stage:StageAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.StageOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "remarks": "Options that are common between HTTP and Websocket APIs.",
        "stability": "experimental",
        "summary": "Options required to create a new stage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const domainName: apigatewayv2_alpha.DomainName;\nconst stageOptions: apigatewayv2_alpha.StageOptions = {\n  autoDeploy: false,\n  domainMapping: {\n    domainName: domainName,\n\n    // the properties below are optional\n    mappingKey: 'mappingKey',\n  },\n  throttle: {\n    burstLimit: 123,\n    rateLimit: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.StageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/stage.ts",
        "line": 49
      },
      "name": "StageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether updates to an API automatically trigger a new deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 54
          },
          "name": "autoDeploy",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no custom domain and api mapping configuration",
            "stability": "experimental",
            "summary": "The options for custom domain and api mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 61
          },
          "name": "domainMapping",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.DomainMappingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no throttling configuration",
            "stability": "experimental",
            "summary": "Throttle settings for the routes of this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 68
          },
          "name": "throttle",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ThrottleSettings"
          }
        }
      ],
      "symbolId": "lib/common/stage:StageOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.ThrottleSettings": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Container for defining throttling parameters to API stages.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst throttleSettings: apigatewayv2_alpha.ThrottleSettings = {\n  burstLimit: 123,\n  rateLimit: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.ThrottleSettings",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common/stage.ts",
        "line": 84
      },
      "name": "ThrottleSettings",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "experimental",
            "summary": "The maximum API request rate limit over a time ranging from one to a few seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 95
          },
          "name": "burstLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "experimental",
            "summary": "The API request steady-state rate limit (average requests per second over an extended period of time)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common/stage.ts",
            "line": 89
          },
          "name": "rateLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/common/stage:ThrottleSettings"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.VpcLink": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });",
        "stability": "experimental",
        "summary": "Define a new VPC Link Specifies an API Gateway VPC link for a HTTP API to access resources in an Amazon Virtual Private Cloud (VPC)."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLink",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/http/vpc-link.ts",
          "line": 90
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http/vpc-link.ts",
        "line": 71
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import a VPC Link by specifying its attributes."
          },
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 75
          },
          "name": "fromVpcLinkAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the provided security groups to the vpc link."
          },
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 124
          },
          "name": "addSecurityGroups",
          "parameters": [
            {
              "name": "groups",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the provided subnets to the vpc link."
          },
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 115
          },
          "name": "addSubnets",
          "parameters": [
            {
              "name": "subnets",
              "type": {
                "fqn": "aws-cdk-lib.aws_ec2.ISubnet"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "VpcLink",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to which this VPC Link is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 85
          },
          "name": "vpc",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Physical ID of the VpcLink resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 84
          },
          "name": "vpcLinkId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/vpc-link:VpcLink"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});",
        "stability": "experimental",
        "summary": "Attributes when importing a new VpcLink."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/vpc-link.ts",
        "line": 55
      },
      "name": "VpcLinkAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC to which this VPC link is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 63
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC Link id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 59
          },
          "name": "vpcLinkId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/vpc-link:VpcLinkAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });",
        "stability": "experimental",
        "summary": "Properties for a VpcLink."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http/vpc-link.ts",
        "line": 25
      },
      "name": "VpcLinkProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC in which the private resources reside."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 29
          },
          "name": "vpc",
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security groups. Use `addSecurityGroups` to add security groups",
            "stability": "experimental",
            "summary": "A list of security groups for the VPC link."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 49
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- private subnets of the provided VPC. Use `addSubnets` to add more subnets",
            "stability": "experimental",
            "summary": "A list of subnets for the VPC link."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 42
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically generated name",
            "stability": "experimental",
            "summary": "The name used to label and identify the VPC link."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http/vpc-link.ts",
            "line": 35
          },
          "name": "vpcLinkName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/http/vpc-link:VpcLinkProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::ApiGatewayV2::Api"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const messageHandler: lambda.Function;\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "Create a new API Gateway WebSocket API endpoint."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/api.ts",
          "line": 137
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi",
        "@aws-cdk/aws-apigatewayv2-alpha.IApi"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/api.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing WebSocket API into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 113
          },
          "name": "fromWebSocketApiAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a new route."
          },
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 166
          },
          "name": "addRoute",
          "parameters": [
            {
              "name": "routeKey",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRoute"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant access to the API Gateway management API for this WebSocket API to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 180
          },
          "name": "grantManageConnections",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this Api Gateway."
          },
          "locationInModule": {
            "filename": "lib/common/base.ts",
            "line": 15
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "WebSocketApi",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The default endpoint for an API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 130
          },
          "name": "apiEndpoint",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of this API Gateway API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 129
          },
          "name": "apiId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is different from `webSocketApiId`.",
            "stability": "experimental",
            "summary": "A human friendly name for this WebSocket API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 135
          },
          "name": "webSocketApiName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/api:WebSocketApi"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });",
        "stability": "experimental",
        "summary": "Attributes for importing a WebSocketApi into the CDK."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/api.ts",
        "line": 91
      },
      "name": "WebSocketApiAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the WebSocketApi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 95
          },
          "name": "webSocketId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- throw san error if apiEndpoint is accessed.",
            "stability": "experimental",
            "summary": "The endpoint URL of the WebSocketApi."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 101
          },
          "name": "apiEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/api:WebSocketApiAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiKeySelectionExpression": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});",
        "stability": "experimental",
        "summary": "Represents the currently available API Key Selection Expressions."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiKeySelectionExpression",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/api.ts",
          "line": 35
        },
        "parameters": [
          {
            "docs": {
              "summary": "The expression used by API Gateway."
            },
            "name": "customApiKeySelector",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/api.ts",
        "line": 18
      },
      "name": "WebSocketApiKeySelectionExpression",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "See https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-lambda-authorizer-output.html",
            "stability": "experimental",
            "summary": "The API will extract the key value from the `usageIdentifierKey` attribute in the `context` map, returned by the Lambda Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 30
          },
          "name": "AUTHORIZER_USAGE_IDENTIFIER_KEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiKeySelectionExpression"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API will extract the key value from the `x-api-key` header in the user request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 23
          },
          "name": "HEADER_X_API_KEY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiKeySelectionExpression"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The expression used by API Gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 35
          },
          "name": "customApiKeySelector",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/api:WebSocketApiKeySelectionExpression"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { WebSocketLambdaAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers-alpha';\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\n// This function handles your WebSocket requests\ndeclare const handler: lambda.Function;\n\nconst authorizer = new WebSocketLambdaAuthorizer('Authorizer', authHandler);\n\nconst integration = new WebSocketLambdaIntegration(\n  'Integration',\n  handler,\n);\n\nnew apigwv2.WebSocketApi(this, 'WebSocketApi', {\n  connectRouteOptions: {\n    integration,\n    authorizer,\n  },\n});",
        "stability": "experimental",
        "summary": "Props for WebSocket API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/api.ts",
        "line": 41
      },
      "name": "WebSocketApiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Key is not required to access these APIs",
            "remarks": "Providing this option will require an API Key be provided to access the API.",
            "stability": "experimental",
            "summary": "An API key selection expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 52
          },
          "name": "apiKeySelectionExpression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApiKeySelectionExpression"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- id of the WebSocketApi construct.",
            "stability": "experimental",
            "summary": "Name for the WebSocket API resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 46
          },
          "name": "apiName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no '$connect' route configured",
            "stability": "experimental",
            "summary": "Options to configure a '$connect' route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 71
          },
          "name": "connectRouteOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no '$default' route configured",
            "stability": "experimental",
            "summary": "Options to configure a '$default' route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 85
          },
          "name": "defaultRouteOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "The description of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 58
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no '$disconnect' route configured",
            "stability": "experimental",
            "summary": "Options to configure a '$disconnect' route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 78
          },
          "name": "disconnectRouteOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'$request.body.action'",
            "stability": "experimental",
            "summary": "The route selection expression for the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/api.ts",
            "line": 64
          },
          "name": "routeSelectionExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/api:WebSocketApiProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Authorizer",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "An authorizer for WebSocket Apis.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\nconst webSocketAuthorizer = new apigatewayv2_alpha.WebSocketAuthorizer(this, 'MyWebSocketAuthorizer', {\n  identitySource: ['identitySource'],\n  type: apigatewayv2_alpha.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizer",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/authorizer.ts",
          "line": 103
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketAuthorizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 82
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing WebSocket Authorizer into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 86
          },
          "name": "fromWebSocketAuthorizerAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer"
            }
          },
          "static": true
        }
      ],
      "name": "WebSocketAuthorizer",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 101
          },
          "name": "authorizerId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IAuthorizer",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/authorizer:WebSocketAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Reference to an WebSocket authorizer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst webSocketAuthorizerAttributes: apigatewayv2_alpha.WebSocketAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 62
      },
      "name": "WebSocketAuthorizerAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 66
          },
          "name": "authorizerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Possible values are:\n- CUSTOM - Lambda Authorizer\n- NONE - No Authorization",
            "stability": "experimental",
            "summary": "Type of authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 75
          },
          "name": "authorizerType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/authorizer:WebSocketAuthorizerAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize an instance of `WebSocketAuthorizer`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\nconst webSocketAuthorizerProps: apigatewayv2_alpha.WebSocketAuthorizerProps = {\n  identitySource: ['identitySource'],\n  type: apigatewayv2_alpha.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 20
      },
      "name": "WebSocketAuthorizerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource",
            "stability": "experimental",
            "summary": "The identity source for which authorization is requested."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 41
          },
          "name": "identitySource",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 35
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "WebSocket Api to attach the authorizer to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 30
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- id of the WebSocketAuthorizer construct.",
            "stability": "experimental",
            "summary": "Name of the authorizer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 25
          },
          "name": "authorizerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- required for Request authorizer types",
            "remarks": "For REQUEST authorizers, this must be a well-formed Lambda function URI.",
            "stability": "experimental",
            "summary": "The authorizer's Uniform Resource Identifier (URI)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 50
          },
          "name": "authorizerUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/authorizer:WebSocketAuthorizerProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Supported Authorizer types."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketAuthorizerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Lambda Authorizer."
          },
          "name": "LAMBDA"
        }
      ],
      "name": "WebSocketAuthorizerType",
      "symbolId": "lib/websocket/authorizer:WebSocketAuthorizerType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegration": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Integration",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "The integration for an API route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\nconst webSocketIntegration = new apigatewayv2_alpha.WebSocketIntegration(this, 'MyWebSocketIntegration', {\n  integrationType: apigatewayv2_alpha.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/integration.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketIntegration"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 54
      },
      "name": "WebSocketIntegration",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 55
          },
          "name": "integrationId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IIntegration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API associated with this integration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 56
          },
          "name": "webSocketApi",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketIntegration",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/integration:WebSocketIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The integration properties.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\nconst webSocketIntegrationProps: apigatewayv2_alpha.WebSocketIntegrationProps = {\n  integrationType: apigatewayv2_alpha.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 33
      },
      "name": "WebSocketIntegrationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 42
          },
          "name": "integrationType",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 47
          },
          "name": "integrationUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API to which this integration should be bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 37
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/integration:WebSocketIntegrationProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationType": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "WebSocket Integration Types."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 19
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "AWS Proxy Integration Type."
          },
          "name": "AWS_PROXY"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mock Integration Type."
          },
          "name": "MOCK"
        }
      ],
      "name": "WebSocketIntegrationType",
      "symbolId": "lib/websocket/integration:WebSocketIntegrationType"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketNoneAuthorizer": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Explicitly configure no authorizers on specific WebSocket API routes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst webSocketNoneAuthorizer = new apigatewayv2_alpha.WebSocketNoneAuthorizer();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketNoneAuthorizer",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 170
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Bind this authorizer to a specified WebSocket route."
          },
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 171
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerConfig"
            }
          }
        }
      ],
      "name": "WebSocketNoneAuthorizer",
      "symbolId": "lib/websocket/authorizer:WebSocketNoneAuthorizer"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRoute": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::ApiGatewayV2::Route",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "Route class that creates the Route for API Gateway WebSocket API.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2_alpha.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2_alpha.WebSocketRouteIntegration;\nconst webSocketRoute = new apigatewayv2_alpha.WebSocketRoute(this, 'MyWebSocketRoute', {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n});"
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRoute",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/route.ts",
          "line": 77
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/route.ts",
        "line": 67
      },
      "name": "WebSocketRoute",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Id of the Route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 68
          },
          "name": "routeId",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IRoute",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The key to this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 70
          },
          "name": "routeKey",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API associated with this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 69
          },
          "name": "webSocketApi",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Integration response ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 75
          },
          "name": "integrationResponseId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/route:WebSocketRoute"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerBindOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Input to the bind() operation, that binds an authorizer to a route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const webSocketRoute: apigatewayv2_alpha.WebSocketRoute;\nconst webSocketRouteAuthorizerBindOptions: apigatewayv2_alpha.WebSocketRouteAuthorizerBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 125
      },
      "name": "WebSocketRouteAuthorizerBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The route to which the authorizer is being bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 129
          },
          "name": "route",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The scope for any constructs created as part of the bind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 133
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        }
      ],
      "symbolId": "lib/websocket/authorizer:WebSocketRouteAuthorizerBindOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerConfig": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Results of binding an authorizer to an WebSocket route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst webSocketRouteAuthorizerConfig: apigatewayv2_alpha.WebSocketRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizerId: 'authorizerId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteAuthorizerConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/authorizer.ts",
        "line": 139
      },
      "name": "WebSocketRouteAuthorizerConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Possible values are:\n- CUSTOM - Lambda Authorizer\n- NONE - No Authorization",
            "stability": "experimental",
            "summary": "The type of authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 154
          },
          "name": "authorizationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No authorizer id (useful for AWS_IAM route authorizer)",
            "stability": "experimental",
            "summary": "The authorizer id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/authorizer.ts",
            "line": 145
          },
          "name": "authorizerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/authorizer:WebSocketRouteAuthorizerConfig"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegration": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "The interface that various route integration classes will inherit."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegration",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Initialize an integration for a route on websocket api."
        },
        "locationInModule": {
          "filename": "lib/websocket/integration.ts",
          "line": 97
        },
        "parameters": [
          {
            "docs": {
              "summary": "id of the underlying `WebSocketIntegration` construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 90
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Bind this integration to the route."
          },
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 124
          },
          "name": "bind",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationConfig"
            }
          }
        }
      ],
      "name": "WebSocketRouteIntegration",
      "symbolId": "lib/websocket/integration:WebSocketRouteIntegration"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationBindOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to the WebSocketRouteIntegration during its bind operation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const webSocketRoute: apigatewayv2_alpha.WebSocketRoute;\nconst webSocketRouteIntegrationBindOptions: apigatewayv2_alpha.WebSocketRouteIntegrationBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 73
      },
      "name": "WebSocketRouteIntegrationBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The route to which this is being bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 77
          },
          "name": "route",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRoute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the `WebSocketRouteIntegration` being bound creates additional constructs,\nthis will be used as their parent scope.",
            "stability": "experimental",
            "summary": "The current scope in which the bind is occurring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 84
          },
          "name": "scope",
          "type": {
            "fqn": "constructs.Construct"
          }
        }
      ],
      "symbolId": "lib/websocket/integration:WebSocketRouteIntegrationBindOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationConfig": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Config returned back as a result of the bind.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nconst webSocketRouteIntegrationConfig: apigatewayv2_alpha.WebSocketRouteIntegrationConfig = {\n  type: apigatewayv2_alpha.WebSocketIntegrationType.AWS_PROXY,\n  uri: 'uri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegrationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/integration.ts",
        "line": 130
      },
      "name": "WebSocketRouteIntegrationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 134
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketIntegrationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Integration URI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/integration.ts",
            "line": 139
          },
          "name": "uri",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/integration:WebSocketRouteIntegrationConfig"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "Options used to add route to the API."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/route.ts",
        "line": 28
      },
      "name": "WebSocketRouteOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The integration to be configured on this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 32
          },
          "name": "integration",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Authorizer",
            "remarks": "You can only set authorizer to a $connect route.",
            "stability": "experimental",
            "summary": "The authorize to this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 39
          },
          "name": "authorizer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketRouteAuthorizer"
          }
        }
      ],
      "symbolId": "lib/websocket/route:WebSocketRouteOptions"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties to initialize a new Route.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2_alpha.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2_alpha.WebSocketRouteIntegration;\nconst webSocketRouteProps: apigatewayv2_alpha.WebSocketRouteProps = {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/route.ts",
        "line": 45
      },
      "name": "WebSocketRouteProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The key to this route."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 54
          },
          "name": "routeKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API the route is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 49
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether the route requires an API Key to be provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/route.ts",
            "line": 60
          },
          "name": "apiKeyRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/websocket/route:WebSocketRouteProps"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStage": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "custom": {
          "exampleMetadata": "infused",
          "resource": "AWS::ApiGatewayV2::Stage"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "Represents a stage where an instance of the API is deployed."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStage",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/websocket/stage.ts",
          "line": 81
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage",
        "@aws-cdk/aws-apigatewayv2-alpha.IStage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/websocket/stage.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing stage into this CDK app."
          },
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 60
          },
          "name": "fromWebSocketStageAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant access to the API Gateway management API for this WebSocket API Stage to an IAM principal (Role/Group/User)."
          },
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 129
          },
          "name": "grantManagementApiAccess",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "identity",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this HTTP Api Gateway Stage."
          },
          "locationInModule": {
            "filename": "lib/common/base.ts",
            "line": 62
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "WebSocketStage",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The API this stage is associated to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 79
          },
          "name": "api",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 77
          },
          "name": "baseApi",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IApi"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The callback URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 117
          },
          "name": "callbackUrl",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "its primary identifier.",
            "stability": "experimental",
            "summary": "The name of the stage;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 78
          },
          "name": "stageName",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The websocket URL to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 108
          },
          "name": "url",
          "overrides": "@aws-cdk/aws-apigatewayv2-alpha.IStage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/websocket/stage:WebSocketStage"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageAttributes": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The attributes used to import existing WebSocketStage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\n\ndeclare const webSocketApi: apigatewayv2_alpha.WebSocketApi;\nconst webSocketStageAttributes: apigatewayv2_alpha.WebSocketStageAttributes = {\n  api: webSocketApi,\n  stageName: 'stageName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageAttributes",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.StageAttributes"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/stage.ts",
        "line": 45
      },
      "name": "WebSocketStageAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API to which this stage is associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 49
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/stage:WebSocketStageAttributes"
    },
    "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageProps": {
      "assembly": "@aws-cdk/aws-apigatewayv2-alpha",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
        "stability": "experimental",
        "summary": "Properties to initialize an instance of `WebSocketStage`."
      },
      "fqn": "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageProps",
      "interfaces": [
        "@aws-cdk/aws-apigatewayv2-alpha.StageOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/websocket/stage.ts",
        "line": 30
      },
      "name": "WebSocketStageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 39
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The WebSocket API to which this stage is associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/websocket/stage.ts",
            "line": 34
          },
          "name": "webSocketApi",
          "type": {
            "fqn": "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi"
          }
        }
      ],
      "symbolId": "lib/websocket/stage:WebSocketStageProps"
    }
  },
  "version": "2.21.1-alpha.0",
  "fingerprint": "**********"
}
