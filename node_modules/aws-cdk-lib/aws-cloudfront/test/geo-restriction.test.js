"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lib_1 = require("../lib");
describe.each([
    ['whitelist', lib_1.GeoRestriction.allowlist],
    ['blacklist', lib_1.GeoRestriction.denylist],
])('%s', (type, geoFn) => {
    test('throws is location is empty', () => {
        expect(() => { geoFn(); }).toThrow(/Should provide at least 1 location/);
    });
    test('throws if locations are the wrong format', () => {
        const error = /Invalid location format for location: .*/;
        expect(() => { geoFn('a'); }).toThrow(error);
        expect(() => { geoFn('abc'); }).toThrow(error);
        expect(() => { geoFn('ab'); }).toThrow(error);
        expect(() => { geoFn('a1'); }).toThrow(error);
    });
    test('includes proper restriction type and location list', () => {
        const restriction = geoFn('US', 'GB');
        expect(restriction.restrictionType).toEqual(type);
        expect(restriction.locations).toEqual(['US', 'GB']);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvLXJlc3RyaWN0aW9uLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJnZW8tcmVzdHJpY3Rpb24udGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGdDQUF3QztBQUV4QyxRQUFRLENBQUMsSUFBSSxDQUFDO0lBQ1osQ0FBQyxXQUFXLEVBQUUsb0JBQWMsQ0FBQyxTQUFTLENBQUM7SUFDdkMsQ0FBQyxXQUFXLEVBQUUsb0JBQWMsQ0FBQyxRQUFRLENBQUM7Q0FDdkMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtJQUV2QixJQUFJLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0lBQzNFLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLDBDQUEwQyxFQUFFLEdBQUcsRUFBRTtRQUNwRCxNQUFNLEtBQUssR0FBRywwQ0FBMEMsQ0FBQztRQUN6RCxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0MsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLG9EQUFvRCxFQUFFLEdBQUcsRUFBRTtRQUM5RCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RDLE1BQU0sQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xELE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQyxDQUFDLENBQUM7QUFFTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdlb1Jlc3RyaWN0aW9uIH0gZnJvbSAnLi4vbGliJztcblxuZGVzY3JpYmUuZWFjaChbXG4gIFsnd2hpdGVsaXN0JywgR2VvUmVzdHJpY3Rpb24uYWxsb3dsaXN0XSxcbiAgWydibGFja2xpc3QnLCBHZW9SZXN0cmljdGlvbi5kZW55bGlzdF0sXG5dKSgnJXMnLCAodHlwZSwgZ2VvRm4pID0+IHtcblxuICB0ZXN0KCd0aHJvd3MgaXMgbG9jYXRpb24gaXMgZW1wdHknLCAoKSA9PiB7XG4gICAgZXhwZWN0KCgpID0+IHsgZ2VvRm4oKTsgfSkudG9UaHJvdygvU2hvdWxkIHByb3ZpZGUgYXQgbGVhc3QgMSBsb2NhdGlvbi8pO1xuICB9KTtcblxuICB0ZXN0KCd0aHJvd3MgaWYgbG9jYXRpb25zIGFyZSB0aGUgd3JvbmcgZm9ybWF0JywgKCkgPT4ge1xuICAgIGNvbnN0IGVycm9yID0gL0ludmFsaWQgbG9jYXRpb24gZm9ybWF0IGZvciBsb2NhdGlvbjogLiovO1xuICAgIGV4cGVjdCgoKSA9PiB7IGdlb0ZuKCdhJyk7IH0pLnRvVGhyb3coZXJyb3IpO1xuICAgIGV4cGVjdCgoKSA9PiB7IGdlb0ZuKCdhYmMnKTsgfSkudG9UaHJvdyhlcnJvcik7XG4gICAgZXhwZWN0KCgpID0+IHsgZ2VvRm4oJ2FiJyk7IH0pLnRvVGhyb3coZXJyb3IpO1xuICAgIGV4cGVjdCgoKSA9PiB7IGdlb0ZuKCdhMScpOyB9KS50b1Rocm93KGVycm9yKTtcbiAgfSk7XG5cbiAgdGVzdCgnaW5jbHVkZXMgcHJvcGVyIHJlc3RyaWN0aW9uIHR5cGUgYW5kIGxvY2F0aW9uIGxpc3QnLCAoKSA9PiB7XG4gICAgY29uc3QgcmVzdHJpY3Rpb24gPSBnZW9GbignVVMnLCAnR0InKTtcbiAgICBleHBlY3QocmVzdHJpY3Rpb24ucmVzdHJpY3Rpb25UeXBlKS50b0VxdWFsKHR5cGUpO1xuICAgIGV4cGVjdChyZXN0cmljdGlvbi5sb2NhdGlvbnMpLnRvRXF1YWwoWydVUycsICdHQiddKTtcbiAgfSk7XG5cbn0pO1xuIl19