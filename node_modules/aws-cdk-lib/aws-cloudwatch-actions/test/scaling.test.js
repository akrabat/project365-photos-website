"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assertions_1 = require("../../assertions");
const autoscaling = require("../../aws-autoscaling");
const cloudwatch = require("../../aws-cloudwatch");
const ec2 = require("../../aws-ec2");
const core_1 = require("../../core");
const actions = require("../lib");
test('can use topic as alarm action', () => {
    // GIVEN
    const stack = new core_1.Stack();
    const vpc = new ec2.Vpc(stack, 'Vpc');
    const autoScalingGroup = new autoscaling.AutoScalingGroup(stack, 'ASG', {
        minCapacity: 1,
        maxCapacity: 100,
        instanceType: new ec2.InstanceType('t-1000.macro'),
        machineImage: new ec2.AmazonLinuxImage(),
        vpc,
    });
    const action = new autoscaling.StepScalingAction(stack, 'Action', {
        autoScalingGroup,
    });
    const alarm = new cloudwatch.Alarm(stack, 'Alarm', {
        metric: new cloudwatch.Metric({ namespace: 'AWS', metricName: 'Henk' }),
        evaluationPeriods: 3,
        threshold: 100,
    });
    // WHEN
    alarm.addAlarmAction(new actions.AutoScalingAction(action));
    // THEN
    assertions_1.Template.fromStack(stack).hasResourceProperties('AWS::CloudWatch::Alarm', {
        AlarmActions: [
            { Ref: 'Action62AD07C0' },
        ],
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGluZy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2NhbGluZy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQTRDO0FBQzVDLHFEQUFxRDtBQUNyRCxtREFBbUQ7QUFDbkQscUNBQXFDO0FBQ3JDLHFDQUFtQztBQUNuQyxrQ0FBa0M7QUFFbEMsSUFBSSxDQUFDLCtCQUErQixFQUFFLEdBQUcsRUFBRTtJQUN6QyxRQUFRO0lBQ1IsTUFBTSxLQUFLLEdBQUcsSUFBSSxZQUFLLEVBQUUsQ0FBQztJQUMxQixNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxXQUFXLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRTtRQUN0RSxXQUFXLEVBQUUsQ0FBQztRQUNkLFdBQVcsRUFBRSxHQUFHO1FBQ2hCLFlBQVksRUFBRSxJQUFJLEdBQUcsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDO1FBQ2xELFlBQVksRUFBRSxJQUFJLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRTtRQUN4QyxHQUFHO0tBQ0osQ0FBQyxDQUFDO0lBQ0gsTUFBTSxNQUFNLEdBQUcsSUFBSSxXQUFXLENBQUMsaUJBQWlCLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtRQUNoRSxnQkFBZ0I7S0FDakIsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxLQUFLLEdBQUcsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUU7UUFDakQsTUFBTSxFQUFFLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDO1FBQ3ZFLGlCQUFpQixFQUFFLENBQUM7UUFDcEIsU0FBUyxFQUFFLEdBQUc7S0FDZixDQUFDLENBQUM7SUFFSCxPQUFPO0lBQ1AsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBRTVELE9BQU87SUFDUCxxQkFBUSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyx3QkFBd0IsRUFBRTtRQUN4RSxZQUFZLEVBQUU7WUFDWixFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRTtTQUMxQjtLQUNGLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGUgfSBmcm9tICcuLi8uLi9hc3NlcnRpb25zJztcbmltcG9ydCAqIGFzIGF1dG9zY2FsaW5nIGZyb20gJy4uLy4uL2F3cy1hdXRvc2NhbGluZyc7XG5pbXBvcnQgKiBhcyBjbG91ZHdhdGNoIGZyb20gJy4uLy4uL2F3cy1jbG91ZHdhdGNoJztcbmltcG9ydCAqIGFzIGVjMiBmcm9tICcuLi8uLi9hd3MtZWMyJztcbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnLi4vLi4vY29yZSc7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2xpYic7XG5cbnRlc3QoJ2NhbiB1c2UgdG9waWMgYXMgYWxhcm0gYWN0aW9uJywgKCkgPT4ge1xuICAvLyBHSVZFTlxuICBjb25zdCBzdGFjayA9IG5ldyBTdGFjaygpO1xuICBjb25zdCB2cGMgPSBuZXcgZWMyLlZwYyhzdGFjaywgJ1ZwYycpO1xuICBjb25zdCBhdXRvU2NhbGluZ0dyb3VwID0gbmV3IGF1dG9zY2FsaW5nLkF1dG9TY2FsaW5nR3JvdXAoc3RhY2ssICdBU0cnLCB7XG4gICAgbWluQ2FwYWNpdHk6IDEsXG4gICAgbWF4Q2FwYWNpdHk6IDEwMCxcbiAgICBpbnN0YW5jZVR5cGU6IG5ldyBlYzIuSW5zdGFuY2VUeXBlKCd0LTEwMDAubWFjcm8nKSxcbiAgICBtYWNoaW5lSW1hZ2U6IG5ldyBlYzIuQW1hem9uTGludXhJbWFnZSgpLFxuICAgIHZwYyxcbiAgfSk7XG4gIGNvbnN0IGFjdGlvbiA9IG5ldyBhdXRvc2NhbGluZy5TdGVwU2NhbGluZ0FjdGlvbihzdGFjaywgJ0FjdGlvbicsIHtcbiAgICBhdXRvU2NhbGluZ0dyb3VwLFxuICB9KTtcbiAgY29uc3QgYWxhcm0gPSBuZXcgY2xvdWR3YXRjaC5BbGFybShzdGFjaywgJ0FsYXJtJywge1xuICAgIG1ldHJpYzogbmV3IGNsb3Vkd2F0Y2guTWV0cmljKHsgbmFtZXNwYWNlOiAnQVdTJywgbWV0cmljTmFtZTogJ0hlbmsnIH0pLFxuICAgIGV2YWx1YXRpb25QZXJpb2RzOiAzLFxuICAgIHRocmVzaG9sZDogMTAwLFxuICB9KTtcblxuICAvLyBXSEVOXG4gIGFsYXJtLmFkZEFsYXJtQWN0aW9uKG5ldyBhY3Rpb25zLkF1dG9TY2FsaW5nQWN0aW9uKGFjdGlvbikpO1xuXG4gIC8vIFRIRU5cbiAgVGVtcGxhdGUuZnJvbVN0YWNrKHN0YWNrKS5oYXNSZXNvdXJjZVByb3BlcnRpZXMoJ0FXUzo6Q2xvdWRXYXRjaDo6QWxhcm0nLCB7XG4gICAgQWxhcm1BY3Rpb25zOiBbXG4gICAgICB7IFJlZjogJ0FjdGlvbjYyQUQwN0MwJyB9LFxuICAgIF0sXG4gIH0pO1xufSk7XG4iXX0=