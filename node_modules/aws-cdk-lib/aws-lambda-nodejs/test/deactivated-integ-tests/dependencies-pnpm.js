"use strict";
/*import * as path from 'path';
import { Runtime } from '@aws-cdk/aws-lambda';
import * as cdk from '@aws-cdk/core';
import * as integ from '@aws-cdk/integ-tests';
import * as triggers from '@aws-cdk/triggers';
import * as lambda from '../lib';

const app = new cdk.App();

const stack = new cdk.Stack(app, 'TestStack');

const handler = new lambda.NodejsFunction(stack, 'Function', {
  entry: path.join(__dirname, 'integ-handlers/pnpm/dependencies-pnpm.ts'),
  runtime: Runtime.NODEJS_18_X,
  bundling: {
    minify: true,
    // Will be installed, not bundled
    // (axios is a package with sub-dependencies,
    // will be used to ensure pnpm bundling works as expected)
    nodeModules: ['axios'],
    forceDockerBundling: true,
  },
  depsLockFilePath: path.join(__dirname, 'integ-handlers/pnpm/pnpm-lock.yaml'),
});

new triggers.Trigger(stack, 'Trigger', {
  handler,
});

new integ.IntegTest(app, 'PnpmTest', {
  testCases: [stack],
  stackUpdateWorkflow: false, // this will tell the runner to not check in assets.
});

app.synth();
*/
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwZW5kZW5jaWVzLXBucG0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZXBlbmRlbmNpZXMtcG5wbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBbUNFIiwic291cmNlc0NvbnRlbnQiOlsiLyppbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgUnVudGltZSB9IGZyb20gJ0Bhd3MtY2RrL2F3cy1sYW1iZGEnO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ0Bhd3MtY2RrL2NvcmUnO1xuaW1wb3J0ICogYXMgaW50ZWcgZnJvbSAnQGF3cy1jZGsvaW50ZWctdGVzdHMnO1xuaW1wb3J0ICogYXMgdHJpZ2dlcnMgZnJvbSAnQGF3cy1jZGsvdHJpZ2dlcnMnO1xuaW1wb3J0ICogYXMgbGFtYmRhIGZyb20gJy4uL2xpYic7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbmNvbnN0IHN0YWNrID0gbmV3IGNkay5TdGFjayhhcHAsICdUZXN0U3RhY2snKTtcblxuY29uc3QgaGFuZGxlciA9IG5ldyBsYW1iZGEuTm9kZWpzRnVuY3Rpb24oc3RhY2ssICdGdW5jdGlvbicsIHtcbiAgZW50cnk6IHBhdGguam9pbihfX2Rpcm5hbWUsICdpbnRlZy1oYW5kbGVycy9wbnBtL2RlcGVuZGVuY2llcy1wbnBtLnRzJyksXG4gIHJ1bnRpbWU6IFJ1bnRpbWUuTk9ERUpTXzE4X1gsXG4gIGJ1bmRsaW5nOiB7XG4gICAgbWluaWZ5OiB0cnVlLFxuICAgIC8vIFdpbGwgYmUgaW5zdGFsbGVkLCBub3QgYnVuZGxlZFxuICAgIC8vIChheGlvcyBpcyBhIHBhY2thZ2Ugd2l0aCBzdWItZGVwZW5kZW5jaWVzLFxuICAgIC8vIHdpbGwgYmUgdXNlZCB0byBlbnN1cmUgcG5wbSBidW5kbGluZyB3b3JrcyBhcyBleHBlY3RlZClcbiAgICBub2RlTW9kdWxlczogWydheGlvcyddLFxuICAgIGZvcmNlRG9ja2VyQnVuZGxpbmc6IHRydWUsXG4gIH0sXG4gIGRlcHNMb2NrRmlsZVBhdGg6IHBhdGguam9pbihfX2Rpcm5hbWUsICdpbnRlZy1oYW5kbGVycy9wbnBtL3BucG0tbG9jay55YW1sJyksXG59KTtcblxubmV3IHRyaWdnZXJzLlRyaWdnZXIoc3RhY2ssICdUcmlnZ2VyJywge1xuICBoYW5kbGVyLFxufSk7XG5cbm5ldyBpbnRlZy5JbnRlZ1Rlc3QoYXBwLCAnUG5wbVRlc3QnLCB7XG4gIHRlc3RDYXNlczogW3N0YWNrXSxcbiAgc3RhY2tVcGRhdGVXb3JrZmxvdzogZmFsc2UsIC8vIHRoaXMgd2lsbCB0ZWxsIHRoZSBydW5uZXIgdG8gbm90IGNoZWNrIGluIGFzc2V0cy5cbn0pO1xuXG5hcHAuc3ludGgoKTtcbiovXG4iXX0=