"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lib_1 = require("../lib");
describe('cluster engine', () => {
    test("default parameterGroupFamily for versionless Aurora cluster engine is 'aurora5.6'", () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.AURORA;
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora5.6');
    });
    test("default parameterGroupFamily for versionless Aurora MySQL cluster engine is 'aurora-mysql5.7'", () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.AURORA_MYSQL;
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora-mysql5.7');
    });
    test('default parameterGroupFamily for versionless Aurora PostgreSQL is not defined', () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.AURORA_POSTGRESQL;
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual(undefined);
    });
    test('cluster parameter group correctly determined for AURORA and given version', () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.aurora({
            version: lib_1.AuroraEngineVersion.VER_1_22_2,
        });
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora5.6');
    });
    test('cluster parameter group correctly determined for AURORA_MYSQL and given version', () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_1,
        });
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora-mysql5.7');
    });
    test('cluster parameter group correctly determined for AURORA_MYSQL and given version 3', () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_3_01_0,
        });
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora-mysql8.0');
    });
    test('cluster parameter group correctly determined for AURORA_POSTGRESQL and given version', () => {
        // GIVEN
        const engine = lib_1.DatabaseClusterEngine.auroraPostgres({
            version: lib_1.AuroraPostgresEngineVersion.VER_11_6,
        });
        // WHEN
        const family = engine.parameterGroupFamily;
        // THEN
        expect(family).toEqual('aurora-postgresql11');
    });
    test('parameter group family', () => {
        // the PostgreSQL engine knows about the following major versions: 9.6, 10 and 11
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('8', '8') }).parameterGroupFamily).toEqual('aurora-postgresql8');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('9', '9') }).parameterGroupFamily).toEqual('aurora-postgresql9');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('9.7', '9.7') }).parameterGroupFamily).toEqual('aurora-postgresql9.7');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('9.6', '9.6') }).parameterGroupFamily).toEqual('aurora-postgresql9.6');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('9.6.1', '9.6') }).parameterGroupFamily).toEqual('aurora-postgresql9.6');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('10.0', '10') }).parameterGroupFamily).toEqual('aurora-postgresql10');
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.of('14.3', '14') }).parameterGroupFamily).toEqual('aurora-postgresql14');
    });
    test('supported log types', () => {
        const mysqlLogTypes = ['error', 'general', 'slowquery', 'audit'];
        expect(lib_1.DatabaseClusterEngine.aurora({ version: lib_1.AuroraEngineVersion.VER_1_22_2 }).supportedLogTypes).toEqual(mysqlLogTypes);
        expect(lib_1.DatabaseClusterEngine.auroraMysql({ version: lib_1.AuroraMysqlEngineVersion.VER_2_08_1 }).supportedLogTypes).toEqual(mysqlLogTypes);
        expect(lib_1.DatabaseClusterEngine.auroraPostgres({ version: lib_1.AuroraPostgresEngineVersion.VER_9_6_9 }).supportedLogTypes).toEqual(['postgresql']);
    });
    test('cluster parameter group correctly determined for AURORA_POSTGRESQL 14 (and other) and given version', () => {
        // GIVEN
        const engine_VER_14_3 = lib_1.DatabaseClusterEngine.auroraPostgres({
            version: lib_1.AuroraPostgresEngineVersion.VER_14_3,
        });
        const engine_ver_1_22_3 = lib_1.DatabaseClusterEngine.aurora({
            version: lib_1.AuroraEngineVersion.VER_1_22_3,
        });
        const engine_ver_1_22_4 = lib_1.DatabaseClusterEngine.aurora({
            version: lib_1.AuroraEngineVersion.VER_1_22_4,
        });
        const engine_ver_1_22_5 = lib_1.DatabaseClusterEngine.aurora({
            version: lib_1.AuroraEngineVersion.VER_1_22_5,
        });
        const engine_ver_2_7_3 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_3,
        });
        const engine_ver_2_7_4 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_4,
        });
        const engine_ver_2_7_5 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_5,
        });
        const engine_ver_2_7_6 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_6,
        });
        const engine_ver_2_7_7 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_7,
        });
        const engine_ver_2_7_8 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_07_8,
        });
        const engine_ver_2_8_3 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_08_3,
        });
        const engine_ver_2_8_4 = lib_1.DatabaseClusterEngine.auroraMysql({
            version: lib_1.AuroraMysqlEngineVersion.VER_2_08_4,
        });
        // THEN
        expect(engine_VER_14_3.parameterGroupFamily).toEqual('aurora-postgresql14');
        expect(engine_ver_1_22_3.parameterGroupFamily).toEqual('aurora5.6');
        expect(engine_ver_1_22_4.parameterGroupFamily).toEqual('aurora5.6');
        expect(engine_ver_1_22_5.parameterGroupFamily).toEqual('aurora5.6');
        expect(engine_ver_2_7_3.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_7_4.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_7_5.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_7_6.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_7_7.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_7_8.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_8_3.parameterGroupFamily).toEqual('aurora-mysql5.7');
        expect(engine_ver_2_8_4.parameterGroupFamily).toEqual('aurora-mysql5.7');
    });
});
//# sourceMappingURL=data:application/json;base64,