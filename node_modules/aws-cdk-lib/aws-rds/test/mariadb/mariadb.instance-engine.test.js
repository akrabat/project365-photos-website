"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assertions_1 = require("../../../assertions");
const core = require("../../../core");
const rds = require("../../lib");
describe('MariaDB server instance engine', () => {
    describe('MariaDB instance engine versions', () => {
        test("has MajorEngineVersion ending in '10.3' for major version 10.3", () => {
            const stack = new core.Stack();
            new rds.OptionGroup(stack, 'OptionGroup', {
                engine: rds.DatabaseInstanceEngine.mariaDb({
                    version: rds.MariaDbEngineVersion.VER_10_3,
                }),
                configurations: [
                    {
                        name: 'MARIADB_BACKUP_RESTORE',
                        settings: {
                            IAM_ROLE_ARN: 'some-role-arn',
                        },
                    },
                ],
            });
            assertions_1.Template.fromStack(stack).hasResourceProperties('AWS::RDS::OptionGroup', {
                MajorEngineVersion: '10.3',
            });
        });
        test("has MajorEngineVersion ending in '10.4' for major version 10.4", () => {
            const stack = new core.Stack();
            new rds.OptionGroup(stack, 'OptionGroup', {
                engine: rds.DatabaseInstanceEngine.mariaDb({
                    version: rds.MariaDbEngineVersion.VER_10_4,
                }),
                configurations: [
                    {
                        name: 'MARIADB_BACKUP_RESTORE',
                        settings: {
                            IAM_ROLE_ARN: 'some-role-arn',
                        },
                    },
                ],
            });
            assertions_1.Template.fromStack(stack).hasResourceProperties('AWS::RDS::OptionGroup', {
                MajorEngineVersion: '10.4',
            });
        });
        test("has MajorEngineVersion ending in '10.5' for major version 10.5", () => {
            const stack = new core.Stack();
            new rds.OptionGroup(stack, 'OptionGroup', {
                engine: rds.DatabaseInstanceEngine.mariaDb({
                    version: rds.MariaDbEngineVersion.VER_10_5,
                }),
                configurations: [
                    {
                        name: 'MARIADB_BACKUP_RESTORE',
                        settings: {
                            IAM_ROLE_ARN: 'some-role-arn',
                        },
                    },
                ],
            });
            assertions_1.Template.fromStack(stack).hasResourceProperties('AWS::RDS::OptionGroup', {
                MajorEngineVersion: '10.5',
            });
        });
        test("has MajorEngineVersion ending in '10.6' for major version 10.6", () => {
            const stack = new core.Stack();
            new rds.OptionGroup(stack, 'OptionGroup', {
                engine: rds.DatabaseInstanceEngine.mariaDb({
                    version: rds.MariaDbEngineVersion.VER_10_6,
                }),
                configurations: [
                    {
                        name: 'MARIADB_BACKUP_RESTORE',
                        settings: {
                            IAM_ROLE_ARN: 'some-role-arn',
                        },
                    },
                ],
            });
            assertions_1.Template.fromStack(stack).hasResourceProperties('AWS::RDS::OptionGroup', {
                MajorEngineVersion: '10.6',
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFyaWFkYi5pbnN0YW5jZS1lbmdpbmUudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1hcmlhZGIuaW5zdGFuY2UtZW5naW5lLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvREFBK0M7QUFDL0Msc0NBQXNDO0FBQ3RDLGlDQUFpQztBQUVqQyxRQUFRLENBQUMsZ0NBQWdDLEVBQUUsR0FBRyxFQUFFO0lBQzlDLFFBQVEsQ0FBQyxrQ0FBa0MsRUFBRSxHQUFHLEVBQUU7UUFDaEQsSUFBSSxDQUFDLGdFQUFnRSxFQUFFLEdBQUcsRUFBRTtZQUMxRSxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUMvQixJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtnQkFDeEMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUM7b0JBQ3pDLE9BQU8sRUFBRSxHQUFHLENBQUMsb0JBQW9CLENBQUMsUUFBUTtpQkFDM0MsQ0FBQztnQkFDRixjQUFjLEVBQUU7b0JBQ2Q7d0JBQ0UsSUFBSSxFQUFFLHdCQUF3Qjt3QkFDOUIsUUFBUSxFQUFFOzRCQUNSLFlBQVksRUFBRSxlQUFlO3lCQUM5QjtxQkFDRjtpQkFDRjthQUNGLENBQUMsQ0FBQztZQUVILHFCQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLHFCQUFxQixDQUFDLHVCQUF1QixFQUFFO2dCQUN2RSxrQkFBa0IsRUFBRSxNQUFNO2FBQzNCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdFQUFnRSxFQUFFLEdBQUcsRUFBRTtZQUMxRSxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUMvQixJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtnQkFDeEMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUM7b0JBQ3pDLE9BQU8sRUFBRSxHQUFHLENBQUMsb0JBQW9CLENBQUMsUUFBUTtpQkFDM0MsQ0FBQztnQkFDRixjQUFjLEVBQUU7b0JBQ2Q7d0JBQ0UsSUFBSSxFQUFFLHdCQUF3Qjt3QkFDOUIsUUFBUSxFQUFFOzRCQUNSLFlBQVksRUFBRSxlQUFlO3lCQUM5QjtxQkFDRjtpQkFDRjthQUNGLENBQUMsQ0FBQztZQUVILHFCQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLHFCQUFxQixDQUFDLHVCQUF1QixFQUFFO2dCQUN2RSxrQkFBa0IsRUFBRSxNQUFNO2FBQzNCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdFQUFnRSxFQUFFLEdBQUcsRUFBRTtZQUMxRSxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUMvQixJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtnQkFDeEMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUM7b0JBQ3pDLE9BQU8sRUFBRSxHQUFHLENBQUMsb0JBQW9CLENBQUMsUUFBUTtpQkFDM0MsQ0FBQztnQkFDRixjQUFjLEVBQUU7b0JBQ2Q7d0JBQ0UsSUFBSSxFQUFFLHdCQUF3Qjt3QkFDOUIsUUFBUSxFQUFFOzRCQUNSLFlBQVksRUFBRSxlQUFlO3lCQUM5QjtxQkFDRjtpQkFDRjthQUNGLENBQUMsQ0FBQztZQUVILHFCQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLHFCQUFxQixDQUFDLHVCQUF1QixFQUFFO2dCQUN2RSxrQkFBa0IsRUFBRSxNQUFNO2FBQzNCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdFQUFnRSxFQUFFLEdBQUcsRUFBRTtZQUMxRSxNQUFNLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUMvQixJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtnQkFDeEMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLENBQUM7b0JBQ3pDLE9BQU8sRUFBRSxHQUFHLENBQUMsb0JBQW9CLENBQUMsUUFBUTtpQkFDM0MsQ0FBQztnQkFDRixjQUFjLEVBQUU7b0JBQ2Q7d0JBQ0UsSUFBSSxFQUFFLHdCQUF3Qjt3QkFDOUIsUUFBUSxFQUFFOzRCQUNSLFlBQVksRUFBRSxlQUFlO3lCQUM5QjtxQkFDRjtpQkFDRjthQUNGLENBQUMsQ0FBQztZQUVILHFCQUFRLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLHFCQUFxQixDQUFDLHVCQUF1QixFQUFFO2dCQUN2RSxrQkFBa0IsRUFBRSxNQUFNO2FBQzNCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlbXBsYXRlIH0gZnJvbSAnLi4vLi4vLi4vYXNzZXJ0aW9ucyc7XG5pbXBvcnQgKiBhcyBjb3JlIGZyb20gJy4uLy4uLy4uL2NvcmUnO1xuaW1wb3J0ICogYXMgcmRzIGZyb20gJy4uLy4uL2xpYic7XG5cbmRlc2NyaWJlKCdNYXJpYURCIHNlcnZlciBpbnN0YW5jZSBlbmdpbmUnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdNYXJpYURCIGluc3RhbmNlIGVuZ2luZSB2ZXJzaW9ucycsICgpID0+IHtcbiAgICB0ZXN0KFwiaGFzIE1ham9yRW5naW5lVmVyc2lvbiBlbmRpbmcgaW4gJzEwLjMnIGZvciBtYWpvciB2ZXJzaW9uIDEwLjNcIiwgKCkgPT4ge1xuICAgICAgY29uc3Qgc3RhY2sgPSBuZXcgY29yZS5TdGFjaygpO1xuICAgICAgbmV3IHJkcy5PcHRpb25Hcm91cChzdGFjaywgJ09wdGlvbkdyb3VwJywge1xuICAgICAgICBlbmdpbmU6IHJkcy5EYXRhYmFzZUluc3RhbmNlRW5naW5lLm1hcmlhRGIoe1xuICAgICAgICAgIHZlcnNpb246IHJkcy5NYXJpYURiRW5naW5lVmVyc2lvbi5WRVJfMTBfMyxcbiAgICAgICAgfSksXG4gICAgICAgIGNvbmZpZ3VyYXRpb25zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ01BUklBREJfQkFDS1VQX1JFU1RPUkUnLFxuICAgICAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICAgICAgSUFNX1JPTEVfQVJOOiAnc29tZS1yb2xlLWFybicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9KTtcblxuICAgICAgVGVtcGxhdGUuZnJvbVN0YWNrKHN0YWNrKS5oYXNSZXNvdXJjZVByb3BlcnRpZXMoJ0FXUzo6UkRTOjpPcHRpb25Hcm91cCcsIHtcbiAgICAgICAgTWFqb3JFbmdpbmVWZXJzaW9uOiAnMTAuMycsXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRlc3QoXCJoYXMgTWFqb3JFbmdpbmVWZXJzaW9uIGVuZGluZyBpbiAnMTAuNCcgZm9yIG1ham9yIHZlcnNpb24gMTAuNFwiLCAoKSA9PiB7XG4gICAgICBjb25zdCBzdGFjayA9IG5ldyBjb3JlLlN0YWNrKCk7XG4gICAgICBuZXcgcmRzLk9wdGlvbkdyb3VwKHN0YWNrLCAnT3B0aW9uR3JvdXAnLCB7XG4gICAgICAgIGVuZ2luZTogcmRzLkRhdGFiYXNlSW5zdGFuY2VFbmdpbmUubWFyaWFEYih7XG4gICAgICAgICAgdmVyc2lvbjogcmRzLk1hcmlhRGJFbmdpbmVWZXJzaW9uLlZFUl8xMF80LFxuICAgICAgICB9KSxcbiAgICAgICAgY29uZmlndXJhdGlvbnM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnTUFSSUFEQl9CQUNLVVBfUkVTVE9SRScsXG4gICAgICAgICAgICBzZXR0aW5nczoge1xuICAgICAgICAgICAgICBJQU1fUk9MRV9BUk46ICdzb21lLXJvbGUtYXJuJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0pO1xuXG4gICAgICBUZW1wbGF0ZS5mcm9tU3RhY2soc3RhY2spLmhhc1Jlc291cmNlUHJvcGVydGllcygnQVdTOjpSRFM6Ok9wdGlvbkdyb3VwJywge1xuICAgICAgICBNYWpvckVuZ2luZVZlcnNpb246ICcxMC40JyxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgdGVzdChcImhhcyBNYWpvckVuZ2luZVZlcnNpb24gZW5kaW5nIGluICcxMC41JyBmb3IgbWFqb3IgdmVyc2lvbiAxMC41XCIsICgpID0+IHtcbiAgICAgIGNvbnN0IHN0YWNrID0gbmV3IGNvcmUuU3RhY2soKTtcbiAgICAgIG5ldyByZHMuT3B0aW9uR3JvdXAoc3RhY2ssICdPcHRpb25Hcm91cCcsIHtcbiAgICAgICAgZW5naW5lOiByZHMuRGF0YWJhc2VJbnN0YW5jZUVuZ2luZS5tYXJpYURiKHtcbiAgICAgICAgICB2ZXJzaW9uOiByZHMuTWFyaWFEYkVuZ2luZVZlcnNpb24uVkVSXzEwXzUsXG4gICAgICAgIH0pLFxuICAgICAgICBjb25maWd1cmF0aW9uczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdNQVJJQURCX0JBQ0tVUF9SRVNUT1JFJyxcbiAgICAgICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgICAgIElBTV9ST0xFX0FSTjogJ3NvbWUtcm9sZS1hcm4nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgfSk7XG5cbiAgICAgIFRlbXBsYXRlLmZyb21TdGFjayhzdGFjaykuaGFzUmVzb3VyY2VQcm9wZXJ0aWVzKCdBV1M6OlJEUzo6T3B0aW9uR3JvdXAnLCB7XG4gICAgICAgIE1ham9yRW5naW5lVmVyc2lvbjogJzEwLjUnLFxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KFwiaGFzIE1ham9yRW5naW5lVmVyc2lvbiBlbmRpbmcgaW4gJzEwLjYnIGZvciBtYWpvciB2ZXJzaW9uIDEwLjZcIiwgKCkgPT4ge1xuICAgICAgY29uc3Qgc3RhY2sgPSBuZXcgY29yZS5TdGFjaygpO1xuICAgICAgbmV3IHJkcy5PcHRpb25Hcm91cChzdGFjaywgJ09wdGlvbkdyb3VwJywge1xuICAgICAgICBlbmdpbmU6IHJkcy5EYXRhYmFzZUluc3RhbmNlRW5naW5lLm1hcmlhRGIoe1xuICAgICAgICAgIHZlcnNpb246IHJkcy5NYXJpYURiRW5naW5lVmVyc2lvbi5WRVJfMTBfNixcbiAgICAgICAgfSksXG4gICAgICAgIGNvbmZpZ3VyYXRpb25zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ01BUklBREJfQkFDS1VQX1JFU1RPUkUnLFxuICAgICAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICAgICAgSUFNX1JPTEVfQVJOOiAnc29tZS1yb2xlLWFybicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9KTtcblxuICAgICAgVGVtcGxhdGUuZnJvbVN0YWNrKHN0YWNrKS5oYXNSZXNvdXJjZVByb3BlcnRpZXMoJ0FXUzo6UkRTOjpPcHRpb25Hcm91cCcsIHtcbiAgICAgICAgTWFqb3JFbmdpbmVWZXJzaW9uOiAnMTAuNicsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTsiXX0=