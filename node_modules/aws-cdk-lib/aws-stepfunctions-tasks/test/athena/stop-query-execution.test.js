"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("../../../core");
const stop_query_execution_1 = require("../../lib/athena/stop-query-execution");
describe('Stop Query Execution', () => {
    test('default settings', () => {
        // GIVEN
        const stack = new cdk.Stack();
        // WHEN
        const task = new stop_query_execution_1.AthenaStopQueryExecution(stack, 'Query', {
            queryExecutionId: '2da557a1-7283-4c3d-8af9-058348f0bb02',
        });
        // THEN
        expect(stack.resolve(task.toStateJson())).toEqual({
            Type: 'Task',
            Resource: {
                'Fn::Join': [
                    '',
                    [
                        'arn:',
                        {
                            Ref: 'AWS::Partition',
                        },
                        ':states:::athena:stopQueryExecution',
                    ],
                ],
            },
            End: true,
            Parameters: {
                QueryExecutionId: '2da557a1-7283-4c3d-8af9-058348f0bb02',
            },
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcC1xdWVyeS1leGVjdXRpb24udGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInN0b3AtcXVlcnktZXhlY3V0aW9uLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUM7QUFDckMsZ0ZBQWlGO0FBRWpGLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxHQUFHLEVBQUU7SUFFcEMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRTtRQUM1QixRQUFRO1FBQ1IsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFOUIsT0FBTztRQUNQLE1BQU0sSUFBSSxHQUFHLElBQUksK0NBQXdCLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRTtZQUN4RCxnQkFBZ0IsRUFBRSxzQ0FBc0M7U0FDekQsQ0FBQyxDQUFDO1FBRUgsT0FBTztRQUNQLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1lBQ2hELElBQUksRUFBRSxNQUFNO1lBQ1osUUFBUSxFQUFFO2dCQUNSLFVBQVUsRUFBRTtvQkFDVixFQUFFO29CQUNGO3dCQUNFLE1BQU07d0JBQ047NEJBQ0UsR0FBRyxFQUFFLGdCQUFnQjt5QkFDdEI7d0JBQ0QscUNBQXFDO3FCQUN0QztpQkFDRjthQUNGO1lBQ0QsR0FBRyxFQUFFLElBQUk7WUFDVCxVQUFVLEVBQUU7Z0JBQ1YsZ0JBQWdCLEVBQUUsc0NBQXNDO2FBQ3pEO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNkayBmcm9tICcuLi8uLi8uLi9jb3JlJztcbmltcG9ydCB7IEF0aGVuYVN0b3BRdWVyeUV4ZWN1dGlvbiB9IGZyb20gJy4uLy4uL2xpYi9hdGhlbmEvc3RvcC1xdWVyeS1leGVjdXRpb24nO1xuXG5kZXNjcmliZSgnU3RvcCBRdWVyeSBFeGVjdXRpb24nLCAoKSA9PiB7XG5cbiAgdGVzdCgnZGVmYXVsdCBzZXR0aW5ncycsICgpID0+IHtcbiAgICAvLyBHSVZFTlxuICAgIGNvbnN0IHN0YWNrID0gbmV3IGNkay5TdGFjaygpO1xuXG4gICAgLy8gV0hFTlxuICAgIGNvbnN0IHRhc2sgPSBuZXcgQXRoZW5hU3RvcFF1ZXJ5RXhlY3V0aW9uKHN0YWNrLCAnUXVlcnknLCB7XG4gICAgICBxdWVyeUV4ZWN1dGlvbklkOiAnMmRhNTU3YTEtNzI4My00YzNkLThhZjktMDU4MzQ4ZjBiYjAyJyxcbiAgICB9KTtcblxuICAgIC8vIFRIRU5cbiAgICBleHBlY3Qoc3RhY2sucmVzb2x2ZSh0YXNrLnRvU3RhdGVKc29uKCkpKS50b0VxdWFsKHtcbiAgICAgIFR5cGU6ICdUYXNrJyxcbiAgICAgIFJlc291cmNlOiB7XG4gICAgICAgICdGbjo6Sm9pbic6IFtcbiAgICAgICAgICAnJyxcbiAgICAgICAgICBbXG4gICAgICAgICAgICAnYXJuOicsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIFJlZjogJ0FXUzo6UGFydGl0aW9uJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnOnN0YXRlczo6OmF0aGVuYTpzdG9wUXVlcnlFeGVjdXRpb24nLFxuICAgICAgICAgIF0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgICAgRW5kOiB0cnVlLFxuICAgICAgUGFyYW1ldGVyczoge1xuICAgICAgICBRdWVyeUV4ZWN1dGlvbklkOiAnMmRhNTU3YTEtNzI4My00YzNkLThhZjktMDU4MzQ4ZjBiYjAyJyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xufSk7Il19