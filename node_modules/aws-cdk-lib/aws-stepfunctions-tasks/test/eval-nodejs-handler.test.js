"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const eval_nodejs_handler_1 = require("../lib/eval-nodejs-handler");
test('with numbers', async () => {
    // GIVEN
    const event = {
        expression: '$.a + $.b',
        expressionAttributeValues: {
            '$.a': 4,
            '$.b': 5,
        },
    };
    // THEN
    const evaluated = await (0, eval_nodejs_handler_1.handler)(event);
    expect(evaluated).toBe(9);
});
test('with strings', async () => {
    // GIVEN
    const event = {
        expression: '`${$.a} ${$.b}`',
        expressionAttributeValues: {
            '$.a': 'Hello',
            '$.b': 'world!',
        },
    };
    // THEN
    const evaluated = await (0, eval_nodejs_handler_1.handler)(event);
    expect(evaluated).toBe('Hello world!');
});
test('with lists', async () => {
    // GIVEN
    const event = {
        expression: '$.a.map(x => x * 2)',
        expressionAttributeValues: {
            '$.a': [1, 2, 3],
        },
    };
    // THEN
    const evaluated = await (0, eval_nodejs_handler_1.handler)(event);
    expect(evaluated).toEqual([2, 4, 6]);
});
test('with duplicated entries', async () => {
    // GIVEN
    const event = {
        expression: '$.a + $.a',
        expressionAttributeValues: {
            '$.a': 1,
        },
    };
    // THEN
    const evaluated = await (0, eval_nodejs_handler_1.handler)(event);
    expect(evaluated).toBe(2);
});
test('with dash and underscore in path', async () => {
    // GIVEN
    const event = {
        expression: '$.a_b + $.c-d + $[_e]',
        expressionAttributeValues: {
            '$.a_b': 1,
            '$.c-d': 2,
            '$[_e]': 3,
        },
    };
    // THEN
    const evaluated = await (0, eval_nodejs_handler_1.handler)(event);
    expect(evaluated).toBe(6);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbC1ub2RlanMtaGFuZGxlci50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZXZhbC1ub2RlanMtaGFuZGxlci50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esb0VBQXFEO0FBRXJELElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDOUIsUUFBUTtJQUNSLE1BQU0sS0FBSyxHQUFVO1FBQ25CLFVBQVUsRUFBRSxXQUFXO1FBQ3ZCLHlCQUF5QixFQUFFO1lBQ3pCLEtBQUssRUFBRSxDQUFDO1lBQ1IsS0FBSyxFQUFFLENBQUM7U0FDVDtLQUNGLENBQUM7SUFFRixPQUFPO0lBQ1AsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFBLDZCQUFPLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QixDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDOUIsUUFBUTtJQUNSLE1BQU0sS0FBSyxHQUFVO1FBQ25CLFVBQVUsRUFBRSxpQkFBaUI7UUFDN0IseUJBQXlCLEVBQUU7WUFDekIsS0FBSyxFQUFFLE9BQU87WUFDZCxLQUFLLEVBQUUsUUFBUTtTQUNoQjtLQUNGLENBQUM7SUFFRixPQUFPO0lBQ1AsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFBLDZCQUFPLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUN6QyxDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxZQUFZLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDNUIsUUFBUTtJQUNSLE1BQU0sS0FBSyxHQUFVO1FBQ25CLFVBQVUsRUFBRSxxQkFBcUI7UUFDakMseUJBQXlCLEVBQUU7WUFDekIsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDakI7S0FDRixDQUFDO0lBRUYsT0FBTztJQUNQLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBQSw2QkFBTyxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMseUJBQXlCLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDekMsUUFBUTtJQUNSLE1BQU0sS0FBSyxHQUFVO1FBQ25CLFVBQVUsRUFBRSxXQUFXO1FBQ3ZCLHlCQUF5QixFQUFFO1lBQ3pCLEtBQUssRUFBRSxDQUFDO1NBQ1Q7S0FDRixDQUFDO0lBRUYsT0FBTztJQUNQLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBQSw2QkFBTyxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsa0NBQWtDLEVBQUUsS0FBSyxJQUFJLEVBQUU7SUFDbEQsUUFBUTtJQUNSLE1BQU0sS0FBSyxHQUFVO1FBQ25CLFVBQVUsRUFBRSx1QkFBdUI7UUFDbkMseUJBQXlCLEVBQUU7WUFDekIsT0FBTyxFQUFFLENBQUM7WUFDVixPQUFPLEVBQUUsQ0FBQztZQUNWLE9BQU8sRUFBRSxDQUFDO1NBQ1g7S0FDRixDQUFDO0lBRUYsT0FBTztJQUNQLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBQSw2QkFBTyxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudCB9IGZyb20gJy4uL2xpYic7XG5pbXBvcnQgeyBoYW5kbGVyIH0gZnJvbSAnLi4vbGliL2V2YWwtbm9kZWpzLWhhbmRsZXInO1xuXG50ZXN0KCd3aXRoIG51bWJlcnMnLCBhc3luYyAoKSA9PiB7XG4gIC8vIEdJVkVOXG4gIGNvbnN0IGV2ZW50OiBFdmVudCA9IHtcbiAgICBleHByZXNzaW9uOiAnJC5hICsgJC5iJyxcbiAgICBleHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7XG4gICAgICAnJC5hJzogNCxcbiAgICAgICckLmInOiA1LFxuICAgIH0sXG4gIH07XG5cbiAgLy8gVEhFTlxuICBjb25zdCBldmFsdWF0ZWQgPSBhd2FpdCBoYW5kbGVyKGV2ZW50KTtcbiAgZXhwZWN0KGV2YWx1YXRlZCkudG9CZSg5KTtcbn0pO1xuXG50ZXN0KCd3aXRoIHN0cmluZ3MnLCBhc3luYyAoKSA9PiB7XG4gIC8vIEdJVkVOXG4gIGNvbnN0IGV2ZW50OiBFdmVudCA9IHtcbiAgICBleHByZXNzaW9uOiAnYCR7JC5hfSAkeyQuYn1gJyxcbiAgICBleHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7XG4gICAgICAnJC5hJzogJ0hlbGxvJyxcbiAgICAgICckLmInOiAnd29ybGQhJyxcbiAgICB9LFxuICB9O1xuXG4gIC8vIFRIRU5cbiAgY29uc3QgZXZhbHVhdGVkID0gYXdhaXQgaGFuZGxlcihldmVudCk7XG4gIGV4cGVjdChldmFsdWF0ZWQpLnRvQmUoJ0hlbGxvIHdvcmxkIScpO1xufSk7XG5cbnRlc3QoJ3dpdGggbGlzdHMnLCBhc3luYyAoKSA9PiB7XG4gIC8vIEdJVkVOXG4gIGNvbnN0IGV2ZW50OiBFdmVudCA9IHtcbiAgICBleHByZXNzaW9uOiAnJC5hLm1hcCh4ID0+IHggKiAyKScsXG4gICAgZXhwcmVzc2lvbkF0dHJpYnV0ZVZhbHVlczoge1xuICAgICAgJyQuYSc6IFsxLCAyLCAzXSxcbiAgICB9LFxuICB9O1xuXG4gIC8vIFRIRU5cbiAgY29uc3QgZXZhbHVhdGVkID0gYXdhaXQgaGFuZGxlcihldmVudCk7XG4gIGV4cGVjdChldmFsdWF0ZWQpLnRvRXF1YWwoWzIsIDQsIDZdKTtcbn0pO1xuXG50ZXN0KCd3aXRoIGR1cGxpY2F0ZWQgZW50cmllcycsIGFzeW5jICgpID0+IHtcbiAgLy8gR0lWRU5cbiAgY29uc3QgZXZlbnQ6IEV2ZW50ID0ge1xuICAgIGV4cHJlc3Npb246ICckLmEgKyAkLmEnLFxuICAgIGV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHtcbiAgICAgICckLmEnOiAxLFxuICAgIH0sXG4gIH07XG5cbiAgLy8gVEhFTlxuICBjb25zdCBldmFsdWF0ZWQgPSBhd2FpdCBoYW5kbGVyKGV2ZW50KTtcbiAgZXhwZWN0KGV2YWx1YXRlZCkudG9CZSgyKTtcbn0pO1xuXG50ZXN0KCd3aXRoIGRhc2ggYW5kIHVuZGVyc2NvcmUgaW4gcGF0aCcsIGFzeW5jICgpID0+IHtcbiAgLy8gR0lWRU5cbiAgY29uc3QgZXZlbnQ6IEV2ZW50ID0ge1xuICAgIGV4cHJlc3Npb246ICckLmFfYiArICQuYy1kICsgJFtfZV0nLFxuICAgIGV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHtcbiAgICAgICckLmFfYic6IDEsXG4gICAgICAnJC5jLWQnOiAyLFxuICAgICAgJyRbX2VdJzogMyxcbiAgICB9LFxuICB9O1xuXG4gIC8vIFRIRU5cbiAgY29uc3QgZXZhbHVhdGVkID0gYXdhaXQgaGFuZGxlcihldmVudCk7XG4gIGV4cGVjdChldmFsdWF0ZWQpLnRvQmUoNik7XG59KTtcbiJdfQ==