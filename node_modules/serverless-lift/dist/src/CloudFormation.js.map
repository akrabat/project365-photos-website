{
  "version": 3,
  "sources": ["../../src/CloudFormation.ts"],
  "sourcesContent": ["import type { DescribeStacksInput, DescribeStacksOutput } from \"aws-sdk/clients/cloudformation\";\nimport type { CfnOutput } from \"aws-cdk-lib\";\nimport { Stack } from \"aws-cdk-lib\";\nimport type { AwsProvider } from \"@lift/providers\";\nimport { getUtils } from \"./utils/logger\";\n\nexport async function getStackOutput(aws: AwsProvider, output: CfnOutput): Promise<string | undefined> {\n    const outputId = Stack.of(output.stack).resolve(output.logicalId) as string;\n    const stackName = aws.stackName;\n\n    getUtils().log.debug(`Fetching output \"${outputId}\" in stack \"${stackName}\"`);\n\n    let data: DescribeStacksOutput;\n    try {\n        data = await aws.request<DescribeStacksInput, DescribeStacksOutput>(\"CloudFormation\", \"describeStacks\", {\n            StackName: stackName,\n        });\n    } catch (e) {\n        if (e instanceof Error && e.message === `Stack with id ${stackName} does not exist`) {\n            getUtils().log.debug(e.message);\n\n            return undefined;\n        }\n\n        throw e;\n    }\n    const outputs = data.Stacks?.[0].Outputs;\n    if (!outputs) {\n        return undefined;\n    }\n    for (const item of outputs) {\n        if (item.OutputKey === outputId) {\n            return item.OutputValue;\n        }\n    }\n\n    return undefined;\n}\n\nexport class PolicyStatement {\n    Effect = \"Allow\";\n    Action: string | string[];\n    Resource: string | Array<unknown>;\n\n    constructor(Action: string | string[], Resource: string | Array<unknown>) {\n        this.Action = Action;\n        this.Resource = Resource;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,yBAAsB;AAEtB,oBAAyB;AAEzB,eAAsB,eAAe,KAAkB,QAAgD;AANvG;AAOI,QAAM,WAAW,yBAAM,GAAG,OAAO,KAAK,EAAE,QAAQ,OAAO,SAAS;AAChE,QAAM,YAAY,IAAI;AAEtB,8BAAS,EAAE,IAAI,MAAM,oBAAoB,uBAAuB,YAAY;AAE5E,MAAI;AACJ,MAAI;AACA,WAAO,MAAM,IAAI,QAAmD,kBAAkB,kBAAkB;AAAA,MACpG,WAAW;AAAA,IACf,CAAC;AAAA,EACL,SAAS,GAAP;AACE,QAAI,aAAa,SAAS,EAAE,YAAY,iBAAiB,4BAA4B;AACjF,kCAAS,EAAE,IAAI,MAAM,EAAE,OAAO;AAE9B,aAAO;AAAA,IACX;AAEA,UAAM;AAAA,EACV;AACA,QAAM,WAAU,UAAK,WAAL,mBAAc,GAAG;AACjC,MAAI,CAAC,SAAS;AACV,WAAO;AAAA,EACX;AACA,aAAW,QAAQ,SAAS;AACxB,QAAI,KAAK,cAAc,UAAU;AAC7B,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,MAAM,gBAAgB;AAAA,EAKzB,YAAY,QAA2B,UAAmC;AAJ1E,kBAAS;AAKL,SAAK,SAAS;AACd,SAAK,WAAW;AAAA,EACpB;AACJ;",
  "names": []
}
